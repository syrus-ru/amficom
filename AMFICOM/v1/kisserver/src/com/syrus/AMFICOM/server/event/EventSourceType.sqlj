package com.syrus.AMFICOM.server.event;

import java.util.Hashtable;
import java.util.Enumeration;
import java.util.LinkedList;
import java.sql.SQLException;

public class EventSourceType {
	private String id;
	private String codename;
	private String name;
	private String source_table_name;
	private Hashtable default_reactions;

	#sql private iterator DefaultReactionsIterator (String event_type_id,
																									String default_reaction_substring);

	public EventSourceType(String id) throws SQLException {
		this.id = id;
		#sql { SELECT codename,
									name,
									source_table_name
						 INTO :(this.codename),
									:(this.name),
									:(this.source_table_name)
						 FROM amficom.eventsourcetypes
						 WHERE id = :(this.id) };

		DefaultReactionsIterator drIt;
		#sql drIt = {SELECT event_type_id,
												default_reaction_substring
									 FROM amficom.sourcetypeeventtypelinks
									 WHERE source_type_id = :(this.id) };
		this.default_reactions = new Hashtable();
		String dr;
		while (drIt.next()) {
			dr = drIt.default_reaction_substring();
			this.default_reactions.put(drIt.event_type_id(), (dr == null)?"":dr);
		}
		drIt.close();
	}

	public boolean canGenerateEventOfType(String event_type_id) {
		return this.default_reactions.containsKey(event_type_id);
	}

	public String getDefaultReaction(String event_type_id) {
		return (String)this.default_reactions.get(event_type_id);
	}

	public String[] getGenerableEventTypes() {
		Enumeration event_types = this.default_reactions.keys();
		LinkedList ll = new LinkedList();
		while (event_types.hasMoreElements())
			ll.add((String)event_types.nextElement());
		return (String[])ll.toArray(new String[ll.size()]);
	}

	public String getId() {
		return this.id;
	}

	public String getCodename() {
		return this.codename;
	}

	public String getSourceTableName() {
		return this.source_table_name;
	}
}