package com.syrus.AMFICOM.scheme.corba;


/**
* com/syrus/AMFICOM/scheme/corba/SchemeElement.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../idl_v1/idl/scheme-vt.idl
* 4 Март 2005 г. 18:11:15 MSK
*/

public abstract class SchemeElement extends com.syrus.AMFICOM.scheme.corba.AbstractSchemeElement implements com.syrus.AMFICOM.resource.SchemeCellContainer, com.syrus.AMFICOM.configuration.ComSyrusAmficomConfigurationSchemeElement, com.syrus.AMFICOM.map.ComSyrusAmficomMapSchemeElement
{

 /**
 						 * May be empty. Probably is subject removal (see {@link #equipmentTypeId}).
 						 */
  protected com.syrus.AMFICOM.general.Identifier schemeProtoElementId = null;

 /**
 						 * Value is either taken from entity pointed to by {@link #schemeProtoElementId} or assigned directly.
 						 */
  protected com.syrus.AMFICOM.general.Identifier equipmentTypeId = null;
  protected com.syrus.AMFICOM.general.Identifier equipmentId = null;
  protected com.syrus.AMFICOM.general.Identifier rtuId = null;
  protected com.syrus.AMFICOM.general.Identifier schemeDeviceIds[] = null;
  protected com.syrus.AMFICOM.general.Identifier schemeLinkIds[] = null;
  protected com.syrus.AMFICOM.general.Identifier schemeElementIds[] = null;
  protected com.syrus.AMFICOM.general.Identifier internalSchemeId = null;

 /**
 						 * Takes non-null value at pack time.
 						 */
  protected com.syrus.AMFICOM.general.Identifier ugoCellId = null;

 /**
 						 * Takes non-null value at pack time.
 						 */
  protected com.syrus.AMFICOM.general.Identifier schemeCellId = null;
  protected com.syrus.AMFICOM.general.Identifier siteId = null;
  protected com.syrus.AMFICOM.general.Identifier symbolId = null;
  protected String thisLabel = null;

  public abstract com.syrus.AMFICOM.scheme.corba.SchemeProtoElement schemeProtoElement ();

  public abstract void schemeProtoElement (com.syrus.AMFICOM.scheme.corba.SchemeProtoElement newSchemeProtoElement);

  public abstract com.syrus.AMFICOM.scheme.corba.SchemeDevice[] schemeDevices ();

  public abstract void schemeDevices (com.syrus.AMFICOM.scheme.corba.SchemeDevice[] newSchemeDevices);

  public abstract com.syrus.AMFICOM.scheme.corba.SchemeLink[] schemeLinks ();

  public abstract void schemeLinks (com.syrus.AMFICOM.scheme.corba.SchemeLink[] newSchemeLinks);


  /**
  						 * Getter returns only elements enclosed by this scheme element.
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemeElement[] schemeElements ();


  /**
  						 * Getter returns only elements enclosed by this scheme element.
  						 */
  public abstract void schemeElements (com.syrus.AMFICOM.scheme.corba.SchemeElement[] newSchemeElements);


  /**
  						 * Getter/setter pair for internalScheme property.
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.Scheme internalScheme ();


  /**
  						 * Getter/setter pair for internalScheme property.
  						 */
  public abstract void internalScheme (com.syrus.AMFICOM.scheme.corba.Scheme newInternalScheme);

  public abstract String label ();

  public abstract void label (String newLabel);

  public abstract com.syrus.AMFICOM.scheme.corba.SchemeElement cloneInstance ();


  /**
  						 * Transient attribute.
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemePath alarmedPath ();


  /**
  						 * Transient attribute.
  						 */
  public abstract void alarmedPath (com.syrus.AMFICOM.scheme.corba.SchemePath newAlarmedPath);


  /**
  						 * Transient attribute.
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.PathElement alarmedPathElement ();


  /**
  						 * Transient attribute.
  						 */
  public abstract void alarmedPathElement (com.syrus.AMFICOM.scheme.corba.PathElement newAlarmedPathElement);
} // class SchemeElement
