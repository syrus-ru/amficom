package com.syrus.AMFICOM.scheme.corba;


/**
* com/syrus/AMFICOM/scheme/corba/SchemePort.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../idl_v1/idl/scheme-vt.idl
* 4 Март 2005 г. 18:11:15 MSK
*/

public abstract class SchemePort extends com.syrus.AMFICOM.scheme.corba.AbstractSchemePort
{
  protected com.syrus.AMFICOM.general.Identifier schemeCableThreadId = null;


  /**
  						 * @see AbstractSchemePort#abstractSchemeLinkId
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemeLink schemeLink ();


  /**
  						 * @see AbstractSchemePort#abstractSchemeLinkId
  						 */
  public abstract void schemeLink (com.syrus.AMFICOM.scheme.corba.SchemeLink newSchemeLink);


  /**
  						 * This is a circular dependency on {@link SchemeCableThread}, see
  							* {@link SchemeCableThread#sourceSchemePort()} and
  							* {@link SchemeCableThread#targetSchemePort()}.
  						 * Getter returns scheme cable thread attached to this scheme port.
  						 *
  						 * @see #schemeCableThreadId
  						 * @see SchemeCableThread#sourceSchemePort()
  						 * @see SchemeCableThread#targetSchemePort()
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemeCableThread schemeCableThread ();


  /**
  						 * This is a circular dependency on {@link SchemeCableThread}, see
  							* {@link SchemeCableThread#sourceSchemePort()} and
  							* {@link SchemeCableThread#targetSchemePort()}.
  						 * Getter returns scheme cable thread attached to this scheme port.
  						 *
  						 * @see #schemeCableThreadId
  						 * @see SchemeCableThread#sourceSchemePort()
  						 * @see SchemeCableThread#targetSchemePort()
  						 */
  public abstract void schemeCableThread (com.syrus.AMFICOM.scheme.corba.SchemeCableThread newSchemeCableThread);

  public abstract com.syrus.AMFICOM.scheme.corba.SchemePort cloneInstance ();
} // class SchemePort
