package com.syrus.AMFICOM.scheme.corba;


/**
* com/syrus/AMFICOM/scheme/corba/PathElement.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../idl_v1/idl/scheme-vt.idl
* 4 Март 2005 г. 18:11:15 MSK
*/


/**
					 * PathElement has no associated <code>name</code> (or <code>thisName</code>) field: its {@link PathElement#name() name()} method actually returns {@link PathElement#abstractSchemeElement() abstractSchemeElement()}<code>.</code>{@link AbstractSchemeElement#name() name()}.
					 */
public abstract class PathElement implements com.syrus.AMFICOM.general.corba.IStorableObject, com.syrus.AMFICOM.general.corba.Namable, com.syrus.AMFICOM.general.corba.Describable
{
  protected String thisDescription = null;
  protected int thisSequentialNumber = (int)0;
  protected com.syrus.AMFICOM.scheme.corba.PathElementPackage.Type thisType = null;

 /**
 						 * Empty if type is other than {@link com.syrus.AMFICOM.scheme.corba.PathElementPackage.Type#SCHEME_CABLE_LINK}.
 						 */
  protected com.syrus.AMFICOM.general.Identifier schemeCableThreadId = null;

 /**
 						 * Depending on {@link #thisType}, may reference either {@link SchemeLink} or {@link SchemeCableLink} or {@link SchemeElement}.
 						 */
  protected com.syrus.AMFICOM.general.Identifier abstractSchemeElementId = null;

 /**
 						 * Depending on {@link #thisType}, may reference either {@link SchemePort} or {@link SchemeCablePort}.
 						 */
  protected com.syrus.AMFICOM.general.Identifier startAbstractSchemePortId = null;

 /**
 						 * Depending on {@link #thisType}, may reference either {@link SchemePort} or {@link SchemeCablePort}.
 						 */
  protected com.syrus.AMFICOM.general.Identifier endAbstractSchemePortId = null;
  protected com.syrus.AMFICOM.general.Identifier schemeId = null;

  public abstract int sequentialNumber ();

  public abstract void sequentialNumber (int newSequentialNumber);

  public abstract com.syrus.AMFICOM.scheme.corba.PathElementPackage.Type type ();

  public abstract void type (com.syrus.AMFICOM.scheme.corba.PathElementPackage.Type newType);

  public abstract com.syrus.AMFICOM.scheme.corba.SchemeCableThread schemeCableThread ();

  public abstract void schemeCableThread (com.syrus.AMFICOM.scheme.corba.SchemeCableThread newSchemeCableThread);

  public abstract com.syrus.AMFICOM.scheme.corba.AbstractSchemeElement abstractSchemeElement ();

  public abstract void abstractSchemeElement (com.syrus.AMFICOM.scheme.corba.AbstractSchemeElement newAbstractSchemeElement);

  public abstract com.syrus.AMFICOM.scheme.corba.AbstractSchemePort startAbstractSchemePort ();

  public abstract void startAbstractSchemePort (com.syrus.AMFICOM.scheme.corba.AbstractSchemePort newStartAbstractSchemePort);

  public abstract com.syrus.AMFICOM.scheme.corba.AbstractSchemePort endAbstractSchemePort ();

  public abstract void endAbstractSchemePort (com.syrus.AMFICOM.scheme.corba.AbstractSchemePort newEndAbstractSchemePort);

  public abstract com.syrus.AMFICOM.scheme.corba.Scheme scheme ();

  public abstract void scheme (com.syrus.AMFICOM.scheme.corba.Scheme newScheme);
} // class PathElement
