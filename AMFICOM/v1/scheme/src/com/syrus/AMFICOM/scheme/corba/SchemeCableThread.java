package com.syrus.AMFICOM.scheme.corba;


/**
* com/syrus/AMFICOM/scheme/corba/SchemeCableThread.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../idl_v1/idl/scheme-vt.idl
* 4 Март 2005 г. 18:11:15 MSK
*/

public abstract class SchemeCableThread implements com.syrus.AMFICOM.general.corba.IStorableObject, com.syrus.AMFICOM.general.corba.Namable, com.syrus.AMFICOM.general.corba.Describable, com.syrus.AMFICOM.general.Characterizable, com.syrus.AMFICOM.configuration.ComSyrusAmficomConfigurationSchemeCableThread
{
  protected String thisName = null;
  protected String thisDescription = null;
  protected com.syrus.AMFICOM.general.Identifier cableThreadTypeId = null;
  protected com.syrus.AMFICOM.general.Identifier sourceSchemePortId = null;
  protected com.syrus.AMFICOM.general.Identifier targetSchemePortId = null;
  protected com.syrus.AMFICOM.general.Identifier schemeCableLinkId = null;
  protected com.syrus.AMFICOM.general.Identifier threadId = null;
  protected com.syrus.AMFICOM.general.Identifier characteristicIds[] = null;


  /**
  						 * This is a circular dependency on {@link SchemePort}, see {@link SchemePort#schemeCableThread()}.
  						 * Getter returns scheme port this scheme cable thread is attached to.
  						 *
  						 * @see #sourceSchemePortId
  						 * @see SchemePort#schemeCableThread()
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemePort sourceSchemePort ();


  /**
  						 * This is a circular dependency on {@link SchemePort}, see {@link SchemePort#schemeCableThread()}.
  						 * Getter returns scheme port this scheme cable thread is attached to.
  						 *
  						 * @see #sourceSchemePortId
  						 * @see SchemePort#schemeCableThread()
  						 */
  public abstract void sourceSchemePort (com.syrus.AMFICOM.scheme.corba.SchemePort newSourceSchemePort);


  /**
  						 * This is a circular dependency on {@link SchemePort}, see {@link SchemePort#schemeCableThread()}.
  						 * Getter returns scheme port this scheme cable thread is attached to.
  						 *
  						 * @see #targetSchemePortId
  						 * @see SchemePort#schemeCableThread()
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemePort targetSchemePort ();


  /**
  						 * This is a circular dependency on {@link SchemePort}, see {@link SchemePort#schemeCableThread()}.
  						 * Getter returns scheme port this scheme cable thread is attached to.
  						 *
  						 * @see #targetSchemePortId
  						 * @see SchemePort#schemeCableThread()
  						 */
  public abstract void targetSchemePort (com.syrus.AMFICOM.scheme.corba.SchemePort newTargetSchemePort);


  /**
  						 * Getter returns scheme cable link containing this scheme cable thread.
  						 *
  						 * @see #schemeCableLinkId
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemeCableLink schemeCablelink ();


  /**
  						 * Getter returns scheme cable link containing this scheme cable thread.
  						 *
  						 * @see #schemeCableLinkId
  						 */
  public abstract void schemeCablelink (com.syrus.AMFICOM.scheme.corba.SchemeCableLink newSchemeCablelink);

  /**
  						 * Returns a scheme port this cable thread is attached to (within scheme
  						 * device specified). The resulting port returned is either a source port
  						 * or a target port.
  						 *
  						 * @todo Transform to a condition.
  						 */
  public abstract com.syrus.AMFICOM.scheme.corba.SchemePort getSchemePort (com.syrus.AMFICOM.scheme.corba.SchemeDevice schemeDevice);


  /**
  						 * Updates a scheme port this cable thread is attached to (within scheme
  						 * device specified) with a new value. This scheme cable thread is
  						 * disconnected from the original port and attached to the new one (both
  						 * old and new ones are notified of this change). As a result, either a
  						 * source scheme port or a target scheme port field is updated. No
  						 * <code>SchemeDevice</code> parameter is needed as <code>SchemePort</code>
  						 * already references it.
  						 *
  						 * @todo Transform to a condition.
  						 */
  public abstract void setSchemePort (com.syrus.AMFICOM.scheme.corba.SchemePort schemePort);
} // class SchemeCableThread
