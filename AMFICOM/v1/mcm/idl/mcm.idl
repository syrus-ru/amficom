#ifndef _MCM_IDL_
#define _MCM_IDL_

#include <measurement.idl>
#include <configuration.idl>

module com {
module syrus {
module AMFICOM {
module mcm {
module corba {

	interface MCM {

		void receiveTests(in measurement::corba::TestSeq_Transferable tests)
			raises (general::corba::AMFICOMRemoteException);

		void abortTest(in general::corba::Identifier_Transferable test_id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::Measurement_Transferable transmitMeasurement(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);
			
		measurement::corba::MeasurementSeq_Transferable transmitMeasurementsButIds(
				in general::corba::StorableObjectCondition_Transferable storableObjectCondition_Transferable,
				in general::corba::IdentifierSeq_Transferable ids)
				raises (general::corba::AMFICOMRemoteException);

		measurement::corba::Analysis_Transferable transmitAnalysis(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);
				
		measurement::corba::AnalysisSeq_Transferable transmitAnalysesButIds(
				in general::corba::StorableObjectCondition_Transferable storableObjectCondition_Transferable,
				in general::corba::IdentifierSeq_Transferable ids)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::Evaluation_Transferable transmitEvaluation(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);
			
		measurement::corba::EvaluationSeq_Transferable transmitEvaluationsButIds(
				in general::corba::StorableObjectCondition_Transferable storableObjectCondition_Transferable,
				in general::corba::IdentifierSeq_Transferable id)				
			raises (general::corba::AMFICOMRemoteException);

		void ping(in long i)
			raises (general::corba::AMFICOMRemoteException);
	};

};
};
};
};
};

#endif
