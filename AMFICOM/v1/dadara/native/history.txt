# CP: 1251

в дальнейших версиях история не велась, т.к. модуль был переведен в CVS

	2004-12-17	saa
* Поддержка аттрибута canLeftLink

	2004-12-14	saa
* Java-класс com.syrus.AMFICOM.analysis.AnalysisManager переименовался в CoreAnalysisManager

	2004-12-09	saa	dadara 3.0
* версия названа Dadara 3.0 в связи с публикацией версии, большими изменениями в идеологии м.ф. и несовместимостью со старыми Java классами

	2004-10-06	saa
* новый IA (An-2dwl-unused/*) сделать не удалось
* заменен метод определения длины рефлектограммы, появилась возможность не чувствовать единичных нулей (An2/findLength: TREAT_ONLY_DUPLICATE_ZEROES)
* новые м.ф. - CON1d, CON1e - но пока что используется только CON1c

	2004-08-19	saa	?	после исследования на 200 коннекторах-образцах
* ModelF: RMS, RMS_lin: добавлен счетчик числа обращений к функции
* ModelF-fit: теперь fit() возвращает статистику
* ModelF-fit: вариации параметров только 0 - 0.1, а не 0 - 0.5
* Nfits:=5; хотя для клиента достаточно 3: на 200 образцах { Nfit=1 => 2.5% ошибок; 2 => 1.3%; 3=> 1.15%; 7 => 0.9% }
* ? - непонятно, что сбоило в версии 2004-08-17 - fb008ref\fb008.sor (возможно, уже исправлено?)
* используется только линейный режим

	2004-08-17	saa	?
* линейный режим
* более узкие диапазоны prefit: tau_max:=~1e4 (поскольку ERR_INITIAL=1e-5, а у нас точность ~12 знаков, то запас теперь есть) // было 1e7
* трехкратный запуск, выбор лучшего (появилась зависимость рез-та от номера запуска fit())
* fb008ref\fb008.sor - фитировка эпизодически сбоит

	2004-08-10	saa	?
* поддержка линейного анализа L-переменных (пока медленновато и не используется, но в тестовом режиме работоспособно)
* ограничение tau >= 0.1 для экспонент в коннекторе
* при переходе veryrough->rough и rough->precise, делаем доп. итерации, фиксируя не-X параметры (чтобы они не убежали)
. остались проблемы:
		OB5\несохраняемые\FB008ref\FB008.SOR - не оч. хор. конн. на 1.0 км


	2004-08-09	saa	?
* текущие проблемы с фитировкой:
08-09	. плохо фитируются (ошибки fit()):
		ob5\mgts\fb000008.sor - спад обрыва
		OB5\несохраняемые\FB008\FB008.SOR - конец спада обрыва - слишком крутая эксп.
		OB5\несохраняемые\FB008ref\FB008.SOR - конн. на 1.23 км - -//-
		OB5\несохраняемые\009REF\FB009ref.SOR - начало спада мертв. зоны - неправильное опр. x_спада -- в старой dadare лучше

	. плохо фитируются (кривая не соотв. модели):
		_new.mgts\2.sor - фронт мертвой зоны
	. плохо фитируются (ошибки InitialAnalysys()):
		OB5\fb000001.tfw - не узнает сварки, считает все лин. участком
		OB5\GN-RASOM1.sor - -//-
	. нехорошо - разрыв между событиями, например в конце мертвой зоны в OB5]GN-RASCOM1.sor


	2004-07-26	saa	?
* use ModelP/EventP Java interface
* analysis and fitting are united again
* note: fitting do not work properly (alpha version)

	2004-07-05	saa	2.1e +
* InitialAnalysis.h: you may undefine USE_NEURAL_NETWORK to disable NN

	2004-07-05	saa	version := dadara2.1e
* splitted into two modules: dadara-analyse and dadara-fit => Java must load both
* meanAttenuation is returned to Java from analyse() and supplied to fit()
* NOTE: meanAttenuation seems to be incorrect now (it is unused anyway)
* _WIN32 predefied is used to switch between Windows and Unix
* analyse() do not invoke fit() anymore => Java does it
* analyse() parameters are changed now => Java code changed

	2004-05-xx	(Stas)	dadara2.1d
(no comments supplied)

	2004-05-26	saa	version := dadara2.1c
* исправил epcf в DEBUG; debug.h
* расставил пробелы как положено
* сохраняется chi2 (в dadara2.1 и 2.1b оно было потеряно)

	2004-05-26	saa	version := dadara2.1b
InitialAnalysis.cpp:
* исправил падение в InitialAnalysis::excludeShortEvents
* изменен DEBUG, частично убран закомментированный код

	2004-05-25	saa	version := dadara2.1
dadara.cpp:
* изменен фиттинг
	* вкл. LinerFitting
	* strategy: в dadara.cpp важно только if (strategy>=0)
	* изменил работу с minuit'ом
* изменен DEBUG
