#ifndef _THRESH_H
#define _THRESH_H

/*
  Структуры THX, THY представляют удобное для C-кода описание порогов.
  В отличие от порогов Java (см. ../JNI/ThreshArray.h), здесь:
  1) содержится только информация, минимально достаточная для
     генерации одной пороговой кривой.
  2) для удобства, все значения DX-порогов неотрицательны

  При leftMode != 0, "главным по сути" является dxL-порог,
  а при leftMode == 0 -- dxR.
  Однако, при формировании пороговой кривой используются оба значения,
  чтобы избежать некоторых неприятных эффектов при работе с немонотонными
  пороговыми участками.

  Тип "L" от типа "A" отличается способом перехода в участке
  между THY-порогами:
  Если оба типа "A" - то высота порога линейно меняется с X-координатой,
  если один тип "L" - то высота порога линейно меняется с высотой исходной
	кривой,
  а вариант, когда оба соседних порога - L-типа, в системе не используется.
 */

struct THX
{
	int x0; // начало участка порога
	int x1; // конец участка порога
	int dxL; // сдвиг влево
	int dxR; // сдвиг вправо
	int leftMode; // boolean флаг "порог сдвигает влево"
};

struct THY
{
	int x0; // начало участка порога
	int x1; // конец участка порога
	double dy; // сдвиг по вертикали (знак соотв. направлению сдвига)
	int type; // тип, 0(DA) / 1(DL) / 2(NI)
	double temp; // просто временное пространство, для генерации NI-порогов (чтобы не выделять динамическую память)
};

// Типы преобразований, генерирующих DY-пороги
const THY_DA = 0; // обычные ампл. пороги
const THY_DL = 1; // пороги для пиков коннекторов
const THY_NI = 2; // пороги для неид. событий (горизонтальные)

#endif
