/*
 * $Id: general-vt.idl,v 1.8 2004/12/21 13:55:38 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 *
 *
 * Defines that can be specified at compile time:
 *
 * NUMERIC_IDENTIFIER (off by default) -- Identifier
 *  will hold primitive major and minor fields rather than a string;
 */

#ifndef GENERAL_VT_IDL
#define GENERAL_VT_IDL

#include "general.idl"

module com {
	module syrus {
		module AMFICOM {
			module general {
				module corba {
					valuetype StorableObject;

					typedef sequence<StorableObject> StorableObjectSeq;

					valuetype Identifier {
						const char SEPARATOR = '_';
#ifdef NUMERIC_IDENTIFIER
						const string IDENTIFIER_STRING_UNINITIALIZED = "";
#else // NUMERIC_IDENTIFIER
						const short MAJOR_UNINITIALIZED = -1;
						const long long MINOR_UNINITIALIZED = -1;
#endif // NUMERIC_IDENTIFIER

#ifdef NUMERIC_IDENTIFIER
						private short thisMajor;
						private long long thisMinor;
#else // NUMERIC_IDENTIFIER  
						private string thisIdentifierString;
#endif // NUMERIC_IDENTIFIER

						readonly attribute short major;
						readonly attribute long long minor;
						readonly attribute string identifierString;

						Identifier cloneInstance();

						/**
						 * Utility method introduced to provide interoperability with native Java Identifier.
						 */						
						readonly attribute Identifier_Transferable transferable;
						/**
						 * Utility method introduced to provide interoperability with native Java Identifier.
						 */						
						readonly attribute string hexString;

						factory newInstanceFromString(in string identifierString);
						factory newInstanceFromPrimitive(in short major, in long long minor);
						factory newInstanceFromTransferable(in Identifier_Transferable identifier);
					};

					typedef sequence<Identifier> IdentifierSeq;

					abstract valuetype Identifiable {
						readonly attribute Identifier id;
					};

					abstract valuetype Namable {
						attribute wstring name;
					};

					abstract valuetype Describable {
						attribute wstring description;
					};

					valuetype StorableObject: Identifiable {
						private Identifier thisId;
						private long long thisCreated;
						private long long thisModified;
						private Identifier thisCreatorId;
						private Identifier thisModifierId;
						private long long thisVersion;

						readonly attribute long long created;
						readonly attribute Identifier creatorId;
						readonly attribute long long modified;
						readonly attribute Identifier modifierId;
						readonly attribute long long version;

						readonly attribute boolean changed;
						readonly attribute StorableObject_Transferable headerTransferable;
						readonly attribute StorableObjectSeq dependencies;
					};
				};
			};
		};
	};
};

#endif // GENERAL_VT_IDL
