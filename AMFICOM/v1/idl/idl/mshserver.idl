/*-
 * $Id: mshserver.idl,v 1.9 2005/05/18 10:58:10 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef MSHSERVER_IDL
#define MSHSERVER_IDL

#include "map.idl"
#include "scheme.idl"

module com {
	module syrus {
		module AMFICOM {
			module mshserver {
				module corba {
					interface MSHServer:
							general::corba::IdentifierGeneratorServer,
							general::corba::Verifiable {
						void delete(in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);		

/*-************************************************************
 * Map -- receive multiple objects.                           *
 **************************************************************/

						general::corba::StorableObjectSeq receiveSiteNodes(
								in map::corba::SiteNodeSeq siteNodes,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveTopologicalNodes(
								in map::corba::TopologicalNodeSeq_Transferable topologicalNodes,
								in boolean force, 	
							in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveNodeLinks(
								in map::corba::NodeLinkSeq_Transferable nodeLinks,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						general::corba::StorableObjectSeq receiveMarks(
								in map::corba::MarkSeq_Transferable marks,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						general::corba::StorableObjectSeq receivePhysicalLinks(
								in map::corba::PhysicalLinkSeq_Transferable physicalLinks,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						general::corba::StorableObjectSeq receiveCollectors(
								in map::corba::CollectorSeq_Transferable collectors,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						general::corba::StorableObjectSeq receiveMaps(
								in map::corba::MapSeq_Transferable maps,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						general::corba::StorableObjectSeq receiveSiteNodeTypes(
								in map::corba::SiteNodeTypeSeq_Transferable siteNodeTypes,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receivePhysicalLinkTypes(
								in map::corba::PhysicalLinkTypeSeq_Transferable physicalLinkTypes,
								in boolean force, 	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

/*-************************************************************
 * Map -- transmit multiple objects.                          *
 **************************************************************/

						map::corba::SiteNodeSeq_Transferable transmitSiteNodes(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						map::corba::TopologicalNodeSeq_Transferable transmitTopologicalNodes(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						map::corba::NodeLinkSeq_Transferable transmitNodeLinks(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						map::corba::MarkSeq_Transferable transmitMarks(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						map::corba::PhysicalLinkSeq_Transferable transmitPhysicalLinks(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						map::corba::CollectorSeq_Transferable transmitCollectors(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						map::corba::MapSeq_Transferable transmitMaps(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);	

						map::corba::SiteNodeTypeSeq_Transferable transmitSiteNodeTypes(
								in general::corba::IdentifierSeq ids,	
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						map::corba::PhysicalLinkTypeSeq_Transferable transmitPhysicalLinkTypes(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

/*-************************************************************
 * Scheme -- receive multiple objects.                        *
 **************************************************************/

						general::corba::StorableObjectSeq receiveSchemeProtoGroups(
								in scheme::corba::SchemeProtoGroupSeq_Transferable schemeProtoGroups,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeProtoElements(
								in scheme::corba::SchemeProtoElementSeq_Transferable schemeProtoElements,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemes(
								in scheme::corba::SchemeSeq_Transferable schemes,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeElements(
								in scheme::corba::SchemeElementSeq_Transferable schemeElements,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeOptimizeInfos(
								in scheme::corba::SchemeOptimizeInfoSeq_Transferable schemeOptimizeInfos,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeMonitoringSolutions(
								in scheme::corba::SchemeMonitoringSolutionSeq_Transferable schemeMonitoringSolutions,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeDevices(
								in scheme::corba::SchemeDeviceSeq_Transferable schemeDevices,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemePorts(
								in scheme::corba::SchemePortSeq_Transferable schemePorts,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeCablePorts(
								in scheme::corba::SchemeCablePortSeq_Transferable schemeCablePorts,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeLinks(
								in scheme::corba::SchemeLinkSeq_Transferable schemeLinks,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeCableLinks(
								in scheme::corba::SchemeCableLinkSeq_Transferable schemeCableLinks,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemeCableThreads(
								in scheme::corba::SchemeCableThreadSeq_Transferable schemeCableThreads,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveCableChannelingItems(
								in scheme::corba::CableChannelingItemSeq_Transferable cableChannelingItems,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receiveSchemePaths(
								in scheme::corba::SchemePathSeq_Transferable schemePaths,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						general::corba::StorableObjectSeq receivePathElements(
								in scheme::corba::PathElementSeq_Transferable pathElements,
								in boolean force, 
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

/*-************************************************************
 * Scheme -- transmit multiple objects.                       *
 **************************************************************/

						scheme::corba::SchemeProtoGroupSeq_Transferable transmitSchemeProtoGroups(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeProtoElementSeq_Transferable transmitSchemeProtoElements(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeSeq_Transferable transmitSchemes(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeElementSeq_Transferable transmitSchemeElements(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeOptimizeInfoSeq_Transferable transmitSchemeOptimizeInfos(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeMonitoringSolutionSeq_Transferable transmitSchemeMonitoringSolutions(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeDeviceSeq_Transferable transmitSchemeDevices(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemePortSeq_Transferable transmitSchemePorts(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeCablePortSeq_Transferable transmitSchemeCablePorts(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeLinkSeq_Transferable transmitSchemeLinks(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeCableLinkSeq_Transferable transmitSchemeCableLinks(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemeCableThreadSeq_Transferable transmitSchemeCableThreads(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::CableChannelingItemSeq_Transferable transmitCableChannelingItems(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::SchemePathSeq_Transferable transmitSchemePaths(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);

						scheme::corba::PathElementSeq_Transferable transmitPathElements(
								in general::corba::IdentifierSeq ids,
								in security::corba::SessionKey sessionKey)
								raises (general::corba::AMFICOMRemoteException);
					};
				};
			};
		};
	};
};

#endif // MSHSERVER_IDL
