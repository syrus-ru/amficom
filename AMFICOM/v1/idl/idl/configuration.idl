#ifndef _CONFIGURATION_IDL_
#define _CONFIGURATION_IDL_

#include <general.idl>

module com {
module syrus {
module AMFICOM {
module configuration {
module corba {

// Generic interface to Equipment, MonitoredElement, etc
//	abstract interface MonitoredDomainMember_Transferable {
//		attribute com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable monitored_element_ids;
//
//		void getKIS() raises (com::syrus::AMFICOM::general::corba::AMFICOMRemoteException);
//	};

//////////////////// AccessIdentifier ///////////////////
	struct AccessIdentifier_Transferable {
		long long started;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable user_id;		
		com::syrus::AMFICOM::general::corba::Identifier_Transferable session_id;
	};

//////////////////// CharacteristicType ///////////////////

	struct CharacteristicType_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		wstring codename;
		wstring description;
		com::syrus::AMFICOM::general::corba::DataType data_type;
		boolean is_editable;
		boolean is_visible;
	};

	typedef sequence <CharacteristicType_Transferable> CharacteristicTypeSeq_Transferable;

/////////////////////// EquipmentType /////////////////////
	struct EquipmentType_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		wstring codename;
		wstring description;
	};
	
	typedef sequence <EquipmentType_Transferable> EquipmentTypeSeq_Transferable;
	
/////////////////////// PortType /////////////////////
	struct PortType_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		wstring codename;
		wstring description;
	};
	
	typedef sequence <PortType_Transferable> PortTypeSeq_Transferable;

	struct MeasurementPortType_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		wstring codename;
		wstring description;
	};

	typedef sequence <MeasurementPortType_Transferable> MeasurementPortTypeSeq_Transferable;

//////////////////////////////////// User /////////////////////////////////
	enum UserSort {
		USER_SORT_SYSADMIN,
		USER_SORT_REGULAR,
		USER_SORT_SERVER,
		USER_SORT_MCM
	};

	struct User_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;
	
		wstring login;
		UserSort sort;
		wstring name;
		wstring description;
	};
	
/////////////////////////////////// Domain ////////////////////////////////
	struct Domain_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		wstring name;
		wstring description;
		
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;
	};
	
	typedef sequence <Domain_Transferable> DomainSeq_Transferable;

/////////////////////////////////// Server ////////////////////////////////
	struct Server_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable user_id;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;
	};

//////////////////////////////////// MCM //////////////////////////////////
	struct MCM_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable user_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable server_id;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable kis_ids;
	};	

////////////////////// Characteristic /////////////////////
	enum CharacteristicSort {
		CHARACTERISTIC_SORT_DOMAIN,
		CHARACTERISTIC_SORT_SERVER,
		CHARACTERISTIC_SORT_MCM,
		CHARACTERISTIC_SORT_TRANSMISSIONPATH,
		CHARACTERISTIC_SORT_EQUIPMENT,
		CHARACTERISTIC_SORT_PORT,
		CHARACTERISTIC_SORT_CABLEPORT,
		CHARACTERISTIC_SORT_MEASUREMENTPORT,
		CHARACTERISTIC_SORT_MONITORINGPORT,
		CHARACTERISTIC_SORT_LINK,
		CHARACTERISTIC_SORT_CABLELINK
	};

	struct Characteristic_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		CharacteristicSort sort;
		wstring value;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable characterized_id;
	};

	typedef sequence <Characteristic_Transferable> CharacteristicSeq_Transferable;

///////////////////////// Equipment ///////////////////////
	struct Equipment_Transferable	{
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable monitored_element_ids;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;

		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable image_id;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable port_ids;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;
	};
	
	typedef sequence <Equipment_Transferable> EquipmentSeq_Transferable;

///////////////////// Transmission Path ///////////////////
	struct TransmissionPath_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable monitored_element_ids;

		wstring name;
		wstring description;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable start_port_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable finish_port_id;
		
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;

	};
	
	typedef sequence <TransmissionPath_Transferable> TransmissionPathSeq_Transferable;

/////////////////////////////// Port ////////////////////////////////
	enum PortSort {
		PORT_SORT_PORT,
		PORT_SORT_CABLE_PORT
	};

	struct Port_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;

		PortSort sort;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable characteristic_ids;
	};

	typedef sequence <Port_Transferable> PortSeq_Transferable;

//////////////////////////////// KIS ////////////////////////////////
	struct KIS_Transferable	{
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable mcm_id;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable measurement_port_ids;
	};
	
	typedef sequence <KIS_Transferable> KISSeq_Transferable;

////////////////////////// MeasurementPort ///////////////////////////
	struct MeasurementPort_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable kis_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable port_id;
	
	};

	typedef sequence <MeasurementPort_Transferable> MeasurementPortSeq_Transferable;

///////////////////// Monitored Element ///////////////////
	enum MonitoredElementSort {
		MONITOREDELEMENT_SORT_LINK,
		MONITOREDELEMENT_SORT_TRANSMISSION_PATH,
		MONITOREDELEMENT_SORT_EQUIPMENT,
		MONITOREDELEMENT_SORT_PORT,
		MONITOREDELEMENT_SORT_CABLEPORT
	};

	struct MonitoredElement_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable measurement_port_id;
		MonitoredElementSort sort;
		wstring local_address;

		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable monitored_domain_member_ids;
	};

	typedef sequence <MonitoredElement_Transferable> MonitoredElementSeq_Transferable;

//////////////// Conditions //////////////

	struct DomainCondition_Transferable {
		short	entity_code;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;
	};

};
};
};
};
};

#endif

