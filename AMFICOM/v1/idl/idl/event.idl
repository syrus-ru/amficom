/*
 * $Id: event.idl,v 1.14 2005/04/23 17:36:31 cvsadmin Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef EVENT_IDL
#define	EVENT_IDL

#include "administration.idl"
#include "configuration.idl"
#include "measurement.idl"

module com {
module syrus {
module AMFICOM {
module event {
module corba {

/////////////////////// Event ////////////////////////

	struct EventType_Transferable {
		general::corba::StorableObject_Transferable header;

		general::corba::WString32 codename;
		general::corba::WString256 description;

		general::corba::IdentifierSeq_Transferable parameter_type_ids;
		general::corba::IdentifierSeq_Transferable user_ids;
	};

	typedef sequence <EventType_Transferable> EventTypeSeq_Transferable;



	struct EventParameter_Transferable {
		general::corba::Identifier_Transferable id;
		general::corba::Identifier_Transferable type_id;
		wstring value;
	};

	struct EventSource_Transferable {
		general::corba::StorableObject_Transferable header;

		general::corba::Identifier_Transferable source_entity_id;
	};

	struct Event_Transferable {
		general::corba::StorableObject_Transferable header;

		general::corba::Identifier_Transferable type_id;
		general::corba::WString256 description;

		sequence <EventParameter_Transferable> parameters;
		sequence <general::corba::Identifier_Transferable> event_source_ids;
	};


/////////////////// EventListener ////////////////////

	abstract interface EventListener {
		void eventNotification(in Event_Transferable et) raises (general::corba::AMFICOMRemoteException);
	};

};
};
};
};
};

#endif
