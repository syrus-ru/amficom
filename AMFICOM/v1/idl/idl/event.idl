/*-
 * $Id: event.idl,v 1.19 2005/06/24 09:28:55 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef EVENT_IDL
#define	EVENT_IDL

#include "administration.idl"
#include "configuration.idl"
#include "measurement.idl"

module com {
module syrus {
module AMFICOM {
module event {
module corba {

/////////////////////// Event ////////////////////////

//	module IdlEventTypePackage {
//		XXX
//		XXX NOT a storable object
//		XXX
		enum AlertKind {
			ALERT_KIND_WINDOW,
			ALERT_KIND_EMAIL,
			ALERT_KIND_SMS
		};

		typedef sequence<AlertKind> AlertKindSeq;

//		XXX
//		XXX NOT a storable object
//		XXX
		struct UserAlertKinds {
			general::corba::Identifier userId;
			AlertKindSeq alertKinds;
		};

		typedef sequence<UserAlertKinds> UserAlertKindsSeq;
//	};

	typedef struct IdlEventType {
		general::corba::StorableObject header;

		general::corba::WString32 codename;
		general::corba::WString256 description;

		general::corba::IdentifierSeq parameterTypeIds;
//		IdlEventTypePackage::
		UserAlertKindsSeq userAlertKinds;
	} EventType;

	typedef sequence<EventType> EventTypeSeq;

//	module IdlEventPackage {
//		XXX
//		XXX NOT a storable object
//		XXX
		typedef struct IdlEventParameter {
			general::corba::Identifier id;
			general::corba::Identifier _typeId;
			wstring value;
		} EventParameter;

		typedef sequence<EventParameter> EventParameterSeq;
//	};

	typedef struct IdlEventSource {
		general::corba::StorableObject header;

		general::corba::Identifier sourceEntityId;
	} EventSource;

	typedef sequence<EventSource> EventSourceSeq;

	typedef struct IdlEvent {
		general::corba::StorableObject header;

		general::corba::Identifier _typeId;
		general::corba::WString256 description;

//		IdlEventPackage::
		EventParameterSeq parameters;
		general::corba::IdentifierSeq eventSourceIds;
	} Event;

	typedef sequence<Event> EventSeq;

/////////////////// EventListener ////////////////////

	abstract interface EventListener {
		void receiveEvent(in Event et) raises (general::corba::AMFICOMRemoteException);
	};

};
};
};
};
};

#endif // EVENT_IDL
