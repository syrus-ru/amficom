/*
 * $Id: event.idl,v 1.4 2004/12/24 18:23:28 arseniy Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef EVENT_IDL
#define	EVENT_IDL

#include "general.idl"

module com {
module syrus {
module AMFICOM {
module event {
module corba {

/////////////////////// Event ////////////////////////

	struct EventType_Transferable {
		com::syrus::AMFICOM::general::corba::StorableObject_Transferable header;

		com::syrus::AMFICOM::general::corba::WString32 codename;
		com::syrus::AMFICOM::general::corba::WString256 description;
	};

	typedef sequence <EventType_Transferable> EventTypeSeq_Transferable;

	enum EventStatus {
		EVENT_STATUS_GENERATED,
		EVENT_STATUS_PROCESSED
	};

	struct Event_Transferable {
		com::syrus::AMFICOM::general::corba::StorableObject_Transferable header;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		EventStatus status;
		com::syrus::AMFICOM::general::corba::WString256 description;
	};

	typedef sequence <Event_Transferable> EventSeq_Transferable;

/////////////////////// Alarm ////////////////////////

	struct AlarmType_Transferable {
		com::syrus::AMFICOM::general::corba::StorableObject_Transferable header;

		com::syrus::AMFICOM::general::corba::WString32 codename;
		com::syrus::AMFICOM::general::corba::WString256 description;
	};

	typedef sequence <AlarmType_Transferable> AlarmTypeSeq_Transferable;

	enum AlarmStatus {
		ALARM_STATUS_GENERATED,
		ALARM_STATUS_ASSIGNED,
		ALARM_STATUS_FIXED,
		ALARM_STATUS_DELETED
	};

	enum AlarmLevel {
		ALARM_LEVEL_NONE,
		ALARM_LEVEL_SOFT,
		ALARM_LEVEL_HARD
	};

	struct Alarm_Transferable {
		com::syrus::AMFICOM::general::corba::StorableObject_Transferable header;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable event_id;
		AlarmStatus status;
		AlarmLevel level;
		com::syrus::AMFICOM::general::corba::WString256 description;
	};

	typedef sequence <Alarm_Transferable> AlarmSeq_Transferable;

};
};
};
};
};

#endif
