/*-
 * $Id: event.idl,v 1.20 2005/07/03 19:16:33 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef EVENT_IDL
#define	EVENT_IDL

#include "general.idl"

#pragma prefix "AMFICOM.syrus.com"

module event {
	module corba {

/////////////////////// Event ////////////////////////

		valuetype IdlEventType: ::general::corba::StorableObject {
			enum AlertKind {
				ALERT_KIND_WINDOW,
				ALERT_KIND_EMAIL,
				ALERT_KIND_SMS
			};

			typedef sequence<AlertKind> AlertKindSeq;

			struct UserAlertKinds {
				::general::corba::Identifier userId;
				AlertKindSeq alertKinds;
			};

			typedef sequence<UserAlertKinds> UserAlertKindsSeq;

			public ::general::corba::WString32 codename;
			public ::general::corba::WString256 description;

			public ::general::corba::IdentifierSeq parameterTypeIds;
			public UserAlertKindsSeq userAlertKinds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in ::general::corba::WString32 codename,
					in ::general::corba::WString256 description,
					in ::general::corba::IdentifierSeq parameterTypeIds,
					in UserAlertKindsSeq userAlertKinds);
		};

		typedef IdlEventType EventType;
		typedef sequence<EventType> EventTypeSeq;

		valuetype IdlEventSource: ::general::corba::StorableObject {
			public ::general::corba::Identifier sourceEntityId;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in ::general::corba::Identifier sourceEntityId);
		};

		typedef IdlEventSource EventSource;
		typedef sequence<EventSource> EventSourceSeq;

		valuetype IdlEvent: ::general::corba::StorableObject {
			typedef struct IdlEventParameter {
				::general::corba::Identifier id;
				::general::corba::Identifier _typeId;
				wstring value;
			} EventParameter;

			typedef sequence<EventParameter> EventParameterSeq;

			public ::general::corba::Identifier _typeId;
			public ::general::corba::WString256 description;

			public EventParameterSeq parameters;
			public ::general::corba::IdentifierSeq eventSourceIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in ::general::corba::Identifier _typeId,
					in ::general::corba::WString256 description,
					in EventParameterSeq parameters,
					in ::general::corba::IdentifierSeq eventSourceIds);
		};

		typedef IdlEvent Event;
		typedef sequence<Event> EventSeq;

/////////////////// EventListener ////////////////////

		abstract interface EventListener {
			void receiveEvent(in Event et) raises (::general::corba::AMFICOMRemoteException);
		};
	};
};

#endif // EVENT_IDL
