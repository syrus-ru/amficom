/*
 * $Id: administration.idl,v 1.8 2005/06/16 10:23:50 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef ADMINISTRATION_IDL
#define ADMINISTRATION_IDL

#include "general.idl"

module com {
module syrus {
module AMFICOM {
module administration {
module corba {

//////////////////////////////////// User /////////////////////////////////


	typedef struct SystemUser_Transferable {
		general::corba::StorableObject header;
	
		general::corba::WString32 login;
		enum SystemUserSort {
			USER_SORT_SYSADMIN,
			USER_SORT_REGULAR,
			USER_SORT_SERVERPROCESS,
			USER_SORT_MCM
		} sort;
		general::corba::WString128 name;
		general::corba::WString256 description;
	} SystemUser;

	typedef sequence<SystemUser> SystemUserSeq;

/////////////////////////////////// Domain ////////////////////////////////
	struct Domain_Transferable {
		general::corba::StorableObject header;

		general::corba::Identifier domain_id;

		general::corba::WString128 name;
		general::corba::WString256 description;
		
		general::corba::IdentifierSeq characteristic_ids;
	};
	
	typedef sequence <Domain_Transferable> DomainSeq_Transferable;
	typedef Domain_Transferable Domain;
	typedef sequence<Domain> DomainSeq;

/////////////////////////////////// Server ////////////////////////////////
	struct Server_Transferable {
		general::corba::StorableObject header;

		general::corba::Identifier domain_id;

		general::corba::WString128 name;
		general::corba::WString256 description;
		general::corba::WString64 hostname;

		general::corba::IdentifierSeq characteristic_ids;
	};

	typedef sequence <Server_Transferable> ServerSeq_Transferable;

//////////////////////////////// ServerProcess ////////////////////////////
	struct ServerProcess_Transferable {
		general::corba::StorableObject header;

		general::corba::WString32 codename;
		general::corba::Identifier server_id;
		general::corba::Identifier user_id;
		general::corba::WString256 description;
	};

	typedef sequence <ServerProcess_Transferable> ServerProcessSeq_Transferable;

//////////////////////////////////// MCM //////////////////////////////////
	struct MCM_Transferable {
		general::corba::StorableObject header;

		general::corba::Identifier domain_id;

		general::corba::WString128 name;
		general::corba::WString256 description;
		general::corba::WString64 hostname;
		general::corba::Identifier user_id;
		general::corba::Identifier server_id;
		general::corba::IdentifierSeq characteristic_ids;
	};
	
	typedef sequence <MCM_Transferable> MCMSeq_Transferable;

};
};
};
};
};

#endif
