/*-
 * $Id: scheme.idl,v 1.26 2005/06/24 14:13:39 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef SCHEME_IDL
#define SCHEME_IDL

#include "general.idl"

module com {
	module syrus {
		module AMFICOM {
			module scheme {
				module corba {
					typedef struct IdlSchemeProtoGroup {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;

						general::corba::Identifier symbolId;
						general::corba::Identifier parentSchemeProtoGroupId;
					} SchemeProtoGroup;

					typedef sequence<SchemeProtoGroup> SchemeProtoGroupSeq;

					typedef struct IdlSchemeProtoElement {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						general::corba::WString64 label;

						general::corba::Identifier equipmentTypeId;
						general::corba::Identifier symbolId;
						general::corba::Identifier ugoCellId;
						general::corba::Identifier schemeCellId;
						general::corba::Identifier parentSchemeProtoGroupId;
						general::corba::Identifier parentSchemeProtoElementId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeProtoElement;

					typedef sequence<SchemeProtoElement> SchemeProtoElementSeq;

					typedef struct IdlScheme {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						general::corba::WString64 label;
						long width;
						long height;
						enum Kind {
							BUILDING,
							CABLE_SUBNETWORK,
							NETWORK,
							FLOOR,
							ROOM,
							RACK,
							BAY,
							CARDCAGE
						} kind;

						general::corba::Identifier domainId;
						general::corba::Identifier mapId;
						general::corba::Identifier symbolId;
						general::corba::Identifier ugoCellId;
						general::corba::Identifier schemeCellId;
						general::corba::Identifier parentSchemeElementId;
					} Scheme;

					typedef sequence<Scheme> SchemeSeq;

					typedef struct IdlSchemeElement {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						general::corba::WString64 label;

						general::corba::Identifier equipmentTypeId;
						general::corba::Identifier equipmentId;
						general::corba::Identifier kisId;
						general::corba::Identifier siteNodeId;
						general::corba::Identifier symbolId;
						general::corba::Identifier ugoCellId;
						general::corba::Identifier schemeCellId;
						general::corba::Identifier parentSchemeId;
						general::corba::Identifier parentSchemeElementId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeElement;

					typedef sequence<SchemeElement> SchemeElementSeq;

					typedef struct IdlSchemeOptimizeInfo {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						long optimizationMode;
						long iterations;
						double price;
						double waveLength;
						double lenMargin;
						double mutationRate;
						double mutationDegree;
						double rtuDeleteProb;
						double rtuCreateProb;
						double nodesSpliceProb;
						double nodesCutProb;
						double survivorRate;

						general::corba::Identifier parentSchemeId;
					} SchemeOptimizeInfo;

					typedef sequence<SchemeOptimizeInfo> SchemeOptimizeInfoSeq;

					typedef struct IdlSchemeOptimizeInfoSwitch {
						general::corba::StorableObject header;
					} SchemeOptimizeInfoSwitch;

					typedef sequence<SchemeOptimizeInfoSwitch> SchemeOptimizeInfoSwitchSeq;

					typedef struct IdlSchemeOptimizeInfoRtu {
						general::corba::StorableObject header;
					} SchemeOptimizeInfoRtu;

					typedef sequence<SchemeOptimizeInfoRtu> SchemeOptimizeInfoRtuSeq;

					typedef struct IdlSchemeMonitoringSolution {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						long priceUsd;
						boolean active;

						general::corba::Identifier parentSchemeOptimizeInfoId;
					} SchemeMonitoringSolution;

					typedef sequence<SchemeMonitoringSolution> SchemeMonitoringSolutionSeq;

					typedef struct IdlSchemeDevice {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;

						general::corba::Identifier parentSchemeProtoElementId;
						general::corba::Identifier parentSchemeElementId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeDevice;

					typedef sequence<SchemeDevice> SchemeDeviceSeq;					

					abstract valuetype IdlAbstractSchemePort {
						enum DirectionType {
							_IN,
							_OUT
						};
					};

					typedef struct IdlSchemePort {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						IdlAbstractSchemePort::DirectionType directionType;

						general::corba::Identifier portTypeId;
						general::corba::Identifier portId;
						general::corba::Identifier measurementPortId;
						general::corba::Identifier parentSchemeDeviceId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemePort;

					typedef sequence<SchemePort> SchemePortSeq;

					typedef struct IdlSchemeCablePort {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						IdlAbstractSchemePort::DirectionType directionType;

						general::corba::Identifier cablePortTypeId;
						general::corba::Identifier cablePortId;
						general::corba::Identifier measurementPortId;
						general::corba::Identifier parentSchemeDeviceId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeCablePort;

					typedef sequence<SchemeCablePort> SchemeCablePortSeq;

					typedef struct IdlSchemeLink {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						double physicalLength;
						double opticalLength;

						general::corba::Identifier linkTypeId;
						general::corba::Identifier linkId;
						general::corba::Identifier siteNodeId;
						general::corba::Identifier sourceSchemePortId;
						general::corba::Identifier targetSchemePortId;
						general::corba::Identifier parentSchemeId;
						general::corba::Identifier parentSchemeElementId;
						general::corba::Identifier parentSchemeProtoElementId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeLink;

					typedef sequence<SchemeLink> SchemeLinkSeq;

					typedef struct IdlSchemeCableLink {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;
						double physicalLength;
						double opticalLength;

						general::corba::Identifier cableLinkTypeId;
						general::corba::Identifier cableLinkId;
						general::corba::Identifier sourceSchemeCablePortId;
						general::corba::Identifier targetSchemeCablePortId;
						general::corba::Identifier parentSchemeId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeCableLink;

					typedef sequence<SchemeCableLink> SchemeCableLinkSeq;

					typedef struct IdlSchemeCableThread {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;

						general::corba::Identifier cableThreadTypeId;
						general::corba::Identifier linkId;
						general::corba::Identifier sourceSchemePortId;
						general::corba::Identifier targetSchemePortId;
						general::corba::Identifier parentSchemeCableLinkId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemeCableThread;

					typedef sequence<SchemeCableThread> SchemeCableThreadSeq;

					typedef struct IdlCableChannelingItem {
						general::corba::StorableObject header;

						double startSpare;
						double endSpare;
						long rowX;
						long placeY;
						long sequentialNumber;

						general::corba::Identifier physicalLinkId;
						general::corba::Identifier startSiteNodeId;
						general::corba::Identifier endSiteNodeId;
						general::corba::Identifier parentSchemeCableLinkId;
					} CableChannelingItem;

					typedef sequence<CableChannelingItem> CableChannelingItemSeq;

					typedef struct IdlSchemePath {
						general::corba::StorableObject header;

						general::corba::WString32 name;
						general::corba::WString256 description;

						general::corba::Identifier transmissionPathId;
						general::corba::Identifier parentSchemeMonitoringSolutionId;
						general::corba::Identifier parentSchemeId;

						general::corba::IdentifierSeq characteristicIds;
					} SchemePath;

					typedef sequence<SchemePath> SchemePathSeq;

					typedef struct IdlPathElement {
						general::corba::StorableObject header;

						general::corba::Identifier parentSchemePathId;
						long sequentialNumber;
						union Data switch (enum Kind{
								SCHEME_ELEMENT,
								SCHEME_CABLE_LINK,
								SCHEME_LINK}) {
							case SCHEME_ELEMENT:
								struct SchemeElementData {
									general::corba::Identifier startAbstractSchemePortId;
									general::corba::Identifier endAbstractSchemePortId;
								} schemeElementData;
							case SCHEME_CABLE_LINK:
								general::corba::Identifier schemeCableThreadId;
							case SCHEME_LINK:
								general::corba::Identifier schemeLinkId;
						} data;
					} PathElement;

					typedef sequence<PathElement> PathElementSeq;
				};
			};
		};
	};
};

#endif // SCHEME_IDL
