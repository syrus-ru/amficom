/*
 * $Id: alarm.idl,v 1.4 2004/10/04 13:33:18 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef ALARM_IDL
#define ALARM_IDL

#include "general.idl"

module com
{
module syrus
{
module AMFICOM
{
module CORBA
{

module Alarm
{
	struct Message_Transferable
	{
		wstring id;
		wstring text;
		wstring event_id;
	};

	typedef sequence <Message_Transferable> MessageSeq_Transferable;

	struct AlarmType_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
	};
	typedef sequence <AlarmType_Transferable> AlarmTypeSeq_Transferable;

	struct Alarm_Transferable
	{
		wstring id;
		long long generated;
		long long modified;
		wstring source_id;
		long long fixed_when;
		long long assigned;
		wstring comments;
		wstring type_id;
		wstring fixed_by;
		General::AlarmStatus status;
		wstring assigned_to;
		wstring event_id;

//		Message_Transferable message;
	};
	typedef sequence <Alarm_Transferable> AlarmSeq_Transferable;

	struct EventSource_Transferable
	{
		wstring id;
		wstring object_source_id;
		wstring object_source_name;
		wstring type_id;
		wstring domain_id;
	};
	typedef sequence <EventSource_Transferable> EventSourceSeq_Transferable;

	struct Event_Transferable
	{
		wstring id;
		wstring description;
		wstring source_id;
		wstring type_id;
		wstring descriptor;
		General::EventStatus status;
		long long created;
	};
	typedef sequence <Event_Transferable> EventSeq_Transferable;

// Maintenance configuring

	struct Rule_Transferable
	{
		wstring event_type_id;
		wstring source_type_id;
		wstring logic_text;
		wstring source_id;
		boolean is_generated;
	};

	typedef sequence <Rule_Transferable> RuleSeq_Transferable;

	struct EventSourceType_Transferable
	{
		wstring id;
		wstring name;
		RuleSeq_Transferable rules;
	};

	typedef sequence <EventSourceType_Transferable> EventSourceTypeSeq_Transferable;
/*
	struct MessageType_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		long long modified;
	};
	typedef sequence <MessageType_Transferable> MessageTypeSeq_Transferable;

	struct AlertingType_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		long long modified;
	};
	typedef sequence <AlertingType_Transferable> AlertingTypeSeq_Transferable;

	struct EventType_Transferable
	{
		wstring id;
		wstring name;
		wstring source_type;
		long long modified;
	};
	typedef sequence <EventType_Transferable> EventTypeSeq_Transferable;
*/
	struct AlertingMessage_Transferable
	{
		wstring id;
		wstring text;
		wstring event_type_id;
		wstring message_type_id;
	};

	typedef sequence <AlertingMessage_Transferable> AlertingMessageSeq_Transferable;

	struct AlertingMessageUser_Transferable
	{
		wstring id;
		wstring user_id;
		wstring alerting_type_id;
		wstring alerting_message_id;
	};

	typedef sequence <AlertingMessageUser_Transferable> AlertingMessageUserSeq_Transferable;
};
};
};
};
};

#endif
