/*-
 * $Id: map.idl,v 1.23 2005/07/03 19:16:33 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef MAP_IDL
#define MAP_IDL

#include "administration.idl"

#pragma prefix "AMFICOM.syrus.com"

module map {
	module corba {
		valuetype IdlSiteNodeType: ::general::corba::StorableObject {
			public wstring codename;
			public wstring name;
			public wstring description;

			public ::general::corba::Identifier imageId;
			public boolean topological;
			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring codename,
					in wstring name,
					in wstring description,
					in ::general::corba::Identifier imageId,
					in boolean topological,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlSiteNodeType SiteNodeType;
		typedef sequence<SiteNodeType> SiteNodeTypeSeq;

		/**
		 * Physical line type such as tunnel, subway, etc.
		 */
		valuetype IdlPhysicalLinkType: ::general::corba::StorableObject {
			public wstring codename;
			public wstring name;
			public wstring description;

			public long dimensionX;
			public long dimensionY;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring codename,
					in wstring name,
					in wstring description,
					in long dimensionX,
					in long dimensionY,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlPhysicalLinkType PhysicalLinkType;
		typedef sequence<PhysicalLinkType> PhysicalLinkTypeSeq;

		valuetype IdlAbstractNode: ::general::corba::StorableObject {
			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version);
		};

		typedef IdlAbstractNode AbstractNode;
		typedef sequence<AbstractNode> AbstractNodeSeq;

		/**
		 * Node.
		 */
		valuetype IdlSiteNode: AbstractNode {
			public wstring name;
			public wstring description;

			public double longitude;	// anchor
			public double latitude;		// anchor

			public ::general::corba::Identifier imageId;
			public ::general::corba::Identifier siteNodeTypeId;

			public wstring city;
			public wstring street;
			public wstring building;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in ::general::corba::Identifier imageId,
					in ::general::corba::Identifier siteNodeTypeId,
					in wstring city,
					in wstring street,
					in wstring building,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlSiteNode SiteNode;
		typedef sequence<SiteNode> SiteNodeSeq;

		valuetype IdlTopologicalNode: AbstractNode {
			public wstring name;
			public wstring description;

			public double longitude;	// anchor
			public double latitude;		// anchor

			public ::general::corba::Identifier physicalLinkId;

			public boolean active;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in ::general::corba::Identifier physicalLinkId,
					in boolean active,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlTopologicalNode TopologicalNode;
		typedef sequence<TopologicalNode> TopologicalNodeSeq;

		/**
		 * Map item, line fragment.
		 */
		valuetype IdlNodeLink: ::general::corba::StorableObject {
			public wstring name;

			public ::general::corba::Identifier physicalLinkId;

			public ::general::corba::Identifier startNodeId;
			public ::general::corba::Identifier endNodeId;

			public double length;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in ::general::corba::Identifier physicalLinkId,
					in ::general::corba::Identifier startNodeId,
					in ::general::corba::Identifier endNodeId,
					in double length,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlNodeLink NodeLink;
		typedef sequence<NodeLink> NodeLinkSeq;

		/**
		 * Mark which has coordinates and is bound to a subway (MapLink) by distance.
		 */
		valuetype IdlMark: ::general::corba::StorableObject {
			public wstring name;
			public wstring description;
			public double longitude;	// anchor
			public double latitude;		// anchor

			public ::general::corba::Identifier physicalLinkId;

			public double distance;

			public wstring city;
			public wstring street;
			public wstring building;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in ::general::corba::Identifier physicalLinkId,
					in double distance,
					in wstring city,
					in wstring street,
					in wstring building,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlMark Mark;
		typedef sequence<Mark> MarkSeq;

		/**
		 * Line item.
		 */
		valuetype IdlPhysicalLink: ::general::corba::StorableObject {
			public wstring name;
			public wstring description;

			public ::general::corba::Identifier physicalLinkTypeId;

			public ::general::corba::Identifier startNodeId;
			public ::general::corba::Identifier endNodeId;

			public wstring city;
			public wstring street;
			public wstring building;

			public long dimensionX;
			public long dimensionY;

			public boolean leftToRight;
			public boolean topToBottom;

			public ::general::corba::IdentifierSeq nodeLinkIds;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in ::general::corba::Identifier physicalLinkTypeId,
					in ::general::corba::Identifier startNodeId,
					in ::general::corba::Identifier endNodeId,
					in wstring city,
					in wstring street,
					in wstring building,
					in long dimensionX,
					in long dimensionY,
					in boolean leftToRight,
					in boolean topToBottom,
					in ::general::corba::IdentifierSeq nodeLinkIds,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlPhysicalLink PhysicalLink;
		typedef sequence<PhysicalLink> PhysicalLinkSeq;

		valuetype IdlCollector: ::general::corba::StorableObject {
			public wstring name;
			public wstring description;

			public ::general::corba::IdentifierSeq physicalLinkIds;

			public ::general::corba::IdentifierSeq characteristicIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in ::general::corba::IdentifierSeq physicalLinkIds,
					in ::general::corba::IdentifierSeq characteristicIds);
		};

		typedef IdlCollector Collector;
		typedef sequence<Collector> CollectorSeq;

		valuetype IdlMap: ::administration::corba::DomainMember {
			public wstring name;
			public wstring description;

			public ::general::corba::IdentifierSeq siteNodeIds;
			public ::general::corba::IdentifierSeq topologicalNodeIds;
			public ::general::corba::IdentifierSeq nodeLinkIds;
			public ::general::corba::IdentifierSeq physicalLinkIds;
			public ::general::corba::IdentifierSeq markIds;
			public ::general::corba::IdentifierSeq collectorIds;

			factory defaultInit();
			factory init(in ::general::corba::Identifier id,
					in long long created,
					in long long modified,
					in ::general::corba::Identifier creatorId,
					in ::general::corba::Identifier modifierId,
					in long long version,
					in ::general::corba::Identifier domainId,
					in wstring name,
					in wstring description,
					in ::general::corba::IdentifierSeq siteNodeIds,
					in ::general::corba::IdentifierSeq topologicalNodeIds,
					in ::general::corba::IdentifierSeq nodeLinkIds,
					in ::general::corba::IdentifierSeq physicalLinkIds,
					in ::general::corba::IdentifierSeq markIds,
					in ::general::corba::IdentifierSeq collectorIds);
		};

		typedef IdlMap Map;
		typedef sequence<Map> MapSeq;

		typedef struct IdlTopologicalImageQuery {
			long mapImageWidth;
			long mapImageHeight;

			double topoCenterX;
			double topoCenterY;
			double topoScale;

			::CORBA::BooleanSeq layerVisibilities;
			::CORBA::BooleanSeq labelVisibilities;
		} TopologicalImageQuery;

		typedef struct IdlRenderedImage {
			::CORBA::OctetSeq image;
		} RenderedImage;

		typedef struct IdlMapFeature {
			double centerX;
			double centerY;

			wstring name;
		} MapFeature;

		typedef sequence<MapFeature> MapFeatureSeq;
	};
};

#endif // MAP_IDL
