/*
 * $Id: map.idl,v 1.10 2004/11/11 10:28:31 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef MAP_IDL
#define MAP_IDL

#include <streams.idl>

#include "general.idl"

module com
{
module syrus
{
module AMFICOM
{
module CORBA
{
module Map
{
	struct MapNodeProtoElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;

		wstring symbolId;

		long long modified;

		boolean isTopological;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapNodeProtoElement_Transferable> MapNodeProtoElementSeq_Transferable;

	struct MapLinkProtoElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;

		long long modified;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapLinkProtoElement_Transferable> MapLinkProtoElementSeq_Transferable;

	struct MapSiteElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring longitude;		// anchor
		wstring latitude;		// anchor

		wstring mapId;

		wstring symbolId;

		wstring mapProtoId;

		long long modified;
		
		wstring city;
		wstring street;
		wstring building;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapSiteElement_Transferable> MapSiteElementSeq_Transferable;

	struct MapPhysicalNodeElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring longitude;
		wstring latitude;

		wstring mapId;

		wstring physicalLinkId;

		boolean active;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapPhysicalNodeElement_Transferable> MapPhysicalNodeElementSeq_Transferable;

	struct MapNodeLinkElement_Transferable
	{
		wstring id;
		wstring name;

		wstring mapId;

		wstring physicalLinkId;
		wstring startNodeId;
		wstring endNodeId;

		double length;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapNodeLinkElement_Transferable> MapNodeLinkElementSeq_Transferable;

	struct MapPhysicalLinkElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;

		wstring mapId;

		wstring mapProtoId;

		wstring startNodeId;
		wstring endNodeId;

		wstring city;
		wstring street;
		wstring building;

		long dimensionX;
		long dimensionY;

		boolean leftToRight;
		boolean topToBottom;

		::CORBA::WStringSeq nodeLinkIds;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapPhysicalLinkElement_Transferable> MapPhysicalLinkElementSeq_Transferable;

	struct MapMarkElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring longitude;
		wstring latitude;

		wstring mapId;

		wstring physicalLinkId;

		double distance;

		wstring city;
		wstring street;
		wstring building;

		General::ElementAttributeSeq_Transferable attributes;
	};
	typedef sequence <MapMarkElement_Transferable> MapMarkElementSeq_Transferable;

	struct MapPipePathElement_Transferable
	{
		wstring id;
		wstring name;
		wstring description;

		wstring mapId;

		General::ElementAttributeSeq_Transferable attributes;

		::CORBA::WStringSeq physicalLinkIds;
	};
	typedef sequence <MapPipePathElement_Transferable> MapPipePathElementSeq_Transferable;

	struct Map_Transferable
	{
		wstring id;
		wstring name;
		wstring userId;
		wstring description;
		wstring domainId;

		long long created;
		wstring createdBy;
		long long modified;
		wstring modifiedBy;

		/**
		 * Sequence of ids of <code>Node</code> class descendants.
		 */
		::CORBA::WStringSeq siteIds;
		/**
		 * Sequence of ids of <code>Node</code> class descendants.
		 */
		::CORBA::WStringSeq nodeIds;
		/**
		 * Sequence of <code>NodeLink</code> ids.
		 */
		::CORBA::WStringSeq nodeLinkIds;
		::CORBA::WStringSeq physicalLinkIds;
		::CORBA::WStringSeq markIds;
		::CORBA::WStringSeq collectorIds;
	};
	typedef sequence <Map_Transferable> MapSeq_Transferable;
	typedef Map_Transferable Map;
	typedef sequence<Map> MapSeq;

	struct MapView_Transferable
	{
		wstring id;
		wstring name;
		wstring userId;
		wstring description;
		wstring domainId;

		long long created;
		wstring createdBy;
		long long modified;
		wstring modifiedBy;

		wstring longitude;
		wstring latitude;
		double scale;
		double defaultScale;

		wstring mapId;
		::CORBA::WStringSeq schemeIds;
	};
	typedef sequence <MapView_Transferable> MapViewSeq_Transferable;

};
};
};
};
};

#endif
