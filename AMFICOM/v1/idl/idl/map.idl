/*-
 * $Id: map.idl,v 1.30 2005/08/03 11:47:19 max Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef MAP_IDL
#define MAP_IDL

#include "administration.idl"

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
module com {
module syrus {
module AMFICOM {
#else // MY_COMPILER_IS_NOT_BRAINDEAD
#pragma prefix "AMFICOM.syrus.com"
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

module map {
	module corba {


/////////////////////// SiteNodeType ////////////////////////

		valuetype IdlSiteNodeType : general::corba::IdlStorableObject {
			
			enum SiteNodeTypeSort {
				SITENODETYPESORT_WELL,
	 			SITENODETYPESORT_PIQUET,
				SITENODETYPESORT_ATS,
				SITENODETYPESORT_BUILDING,
				SITENODETYPESORT_UNBOUND,
				SITENODETYPESORT_CABLE_INLET,
				SITENODETYPESORT_TOWER
			};
			
			public SiteNodeTypeSort sort;
			
			public wstring codename;
			public wstring name;
			public wstring description;

			public general::corba::IdlIdentifier imageId;
			public boolean isTopological;
			
			public general::corba::IdlIdentifier mapLibraryId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in SiteNodeTypeSort sort,
					in wstring codename,
					in wstring name,
					in wstring description,
					in general::corba::IdlIdentifier imageId,
					in boolean isTopological,
					in general::corba::IdlIdentifier mapLibrary);
		};


/////////////////////// PhysicalLinkType ////////////////////////

		/**
		 * Physical line type such as tunnel, subway, etc.
		 */
		valuetype IdlPhysicalLinkType : general::corba::IdlStorableObject {
			
			enum PhysicalLinkTypeSort {
				PHYSICALLINKTYPESORT_TUNNEL,
				PHYSICALLINKTYPESORT_COLLECTOR,
				PHYSICALLINKTYPESORT_INDOOR,
				PHYSICALLINKTYPESORT_SUBMARINE,
				PHYSICALLINKTYPESORT_OVERHEAD,
				PHYSICALLINKTYPESORT_UNBOUND
			};
			
			public PhysicalLinkTypeSort sort;
			
			public wstring codename;
			public wstring name;
			public wstring description;
			
			public boolean isTopological;
			
			public long dimensionX;
			public long dimensionY;
			
			public general::corba::IdlIdentifier mapLibraryId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in PhysicalLinkTypeSort sort,
					in wstring codename,
					in wstring name,
					in wstring description,
					in long dimensionX,
					in long dimensionY,
					in boolean isTopological,
					in general::corba::IdlIdentifier mapLibraryId);
		};


/////////////////////// AbstractNode - SiteNode, TopologicalNode ////////////////////////

		valuetype IdlAbstractNode : general::corba::IdlStorableObject {
		};

		valuetype IdlSiteNode : IdlAbstractNode {
			public wstring name;
			public wstring description;

			public double longitude;	// anchor
			public double latitude;		// anchor

			public general::corba::IdlIdentifier imageId;
			public general::corba::IdlIdentifier siteNodeTypeId;

			public wstring city;
			public wstring street;
			public wstring building;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in general::corba::IdlIdentifier imageId,
					in general::corba::IdlIdentifier siteNodeTypeId,
					in wstring city,
					in wstring street,
					in wstring building);
		};

		valuetype IdlTopologicalNode : IdlAbstractNode {
			public wstring name;
			public wstring description;

			public double longitude;	// anchor
			public double latitude;		// anchor

			public general::corba::IdlIdentifier physicalLinkId;

			public boolean active;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in general::corba::IdlIdentifier physicalLinkId,
					in boolean active);
		};


/////////////////////// NodeLink ////////////////////////

		/**
		 * Map item, line fragment.
		 */
		valuetype IdlNodeLink : general::corba::IdlStorableObject {
			public wstring name;

			public general::corba::IdlIdentifier physicalLinkId;

			public general::corba::IdlIdentifier startNodeId;
			public general::corba::IdlIdentifier endNodeId;

			public double length;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in general::corba::IdlIdentifier physicalLinkId,
					in general::corba::IdlIdentifier startNodeId,
					in general::corba::IdlIdentifier endNodeId,
					in double length);
		};


/////////////////////// Mark ////////////////////////

		/**
		 * Mark which has coordinates and is bound to a subway (MapLink) by distance.
		 */
		valuetype IdlMark : general::corba::IdlStorableObject {
			public wstring name;
			public wstring description;
			public double longitude;	// anchor
			public double latitude;		// anchor

			public general::corba::IdlIdentifier physicalLinkId;

			public double distance;

			public wstring city;
			public wstring street;
			public wstring building;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in double  longitude,
					in double latitude,
					in general::corba::IdlIdentifier physicalLinkId,
					in double distance,
					in wstring city,
					in wstring street,
					in wstring building);
		};


/////////////////////// PhysicalLink ////////////////////////

		/**
		 * Line item.
		 */
		valuetype IdlPhysicalLink : general::corba::IdlStorableObject {
			public wstring name;
			public wstring description;

			public general::corba::IdlIdentifier physicalLinkTypeId;

			public general::corba::IdlIdentifier startNodeId;
			public general::corba::IdlIdentifier endNodeId;

			public wstring city;
			public wstring street;
			public wstring building;

			public long dimensionX;
			public long dimensionY;

			public boolean leftToRight;
			public boolean topToBottom;

			public general::corba::IdlIdentifierSeq nodeLinkIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in general::corba::IdlIdentifier physicalLinkTypeId,
					in general::corba::IdlIdentifier startNodeId,
					in general::corba::IdlIdentifier endNodeId,
					in wstring city,
					in wstring street,
					in wstring building,
					in long dimensionX,
					in long dimensionY,
					in boolean leftToRight,
					in boolean topToBottom,
					in general::corba::IdlIdentifierSeq nodeLinkIds);
		};


/////////////////////// Collector ////////////////////////

		valuetype IdlCollector : general::corba::IdlStorableObject {
			public wstring name;
			public wstring description;

			public general::corba::IdlIdentifierSeq physicalLinkIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring description,
					in general::corba::IdlIdentifierSeq physicalLinkIds);
		};
		
		
//////////////////////// MapLibrary ////////////////////////

		valuetype IdlMapLibrary : general::corba::IdlStorableObject {
			public wstring name;
			public wstring codename;
			public wstring description;
			
			public general::corba::IdlIdentifier parentMapLibraryId;
			
			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in wstring name,
					in wstring codename,
					in wstring description,
					in general::corba::IdlIdentifier parentMapLibraryId);
		};


/////////////////////// Map ////////////////////////

		valuetype IdlMap : administration::corba::IdlDomainMember {
			public wstring name;
			public wstring description;

			public general::corba::IdlIdentifierSeq siteNodeIds;
			public general::corba::IdlIdentifierSeq topologicalNodeIds;
			public general::corba::IdlIdentifierSeq nodeLinkIds;
			public general::corba::IdlIdentifierSeq physicalLinkIds;
			public general::corba::IdlIdentifierSeq markIds;
			public general::corba::IdlIdentifierSeq collectorIds;
			public general::corba::IdlIdentifierSeq mapIds;
			public general::corba::IdlIdentifierSeq externalNodeIds;
			public general::corba::IdlIdentifierSeq mapLibraryIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier domainId,
					in wstring name,
					in wstring description,
					in general::corba::IdlIdentifierSeq siteNodeIds,
					in general::corba::IdlIdentifierSeq topologicalNodeIds,
					in general::corba::IdlIdentifierSeq nodeLinkIds,
					in general::corba::IdlIdentifierSeq physicalLinkIds,
					in general::corba::IdlIdentifierSeq markIds,
					in general::corba::IdlIdentifierSeq collectorIds,
					in general::corba::IdlIdentifierSeq mapIds,
					in general::corba::IdlIdentifierSeq externalNodeIds,
					in general::corba::IdlIdentifierSeq mapLibraryIds);
		};


/////////////////////// /// ////////////////////////

		struct IdlTopologicalImageQuery {
			long mapImageWidth;
			long mapImageHeight;

			double topoCenterX;
			double topoCenterY;
			double topoScale;

			::CORBA::BooleanSeq layerVisibilities;
			::CORBA::BooleanSeq labelVisibilities;
		};

		struct IdlRenderedImage {
			::CORBA::OctetSeq image;
		};

		struct IdlMapFeature {
			double centerX;
			double centerY;

			wstring name;
		};
		typedef sequence<IdlMapFeature> IdlMapFeatureSeq;

		struct IdlMapDescriptor {
			wstring name;
			wstring fileName;
			wstring filePathName;
			
			long long length;
			long long lastModified;
		};
		typedef sequence<IdlMapDescriptor> IdlMapDescriptorSeq;
		
		struct IdlLayerDescriptor {
			wstring fileName;
			wstring pathName;
			
			long long length;
			long long lastModified;
		};
		typedef sequence<IdlLayerDescriptor> IdlLayerDescriptorSeq;
	};
};

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
};
};
};
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

#endif // MAP_IDL
