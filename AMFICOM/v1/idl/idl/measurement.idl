/*-
 * $Id: measurement.idl,v 1.81 2005/09/05 18:09:05 arseniy Exp $
 *
 * Copyright © 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef MEASUREMENT_IDL
#define	MEASUREMENT_IDL

#include "general.idl"
#include "administration.idl"

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
module com {
module syrus {
module AMFICOM {
#else // MY_COMPILER_IS_NOT_BRAINDEAD
#pragma prefix "AMFICOM.syrus.com"
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

module measurement {
	module corba {


////////////////////////// MeasurementType ///////////////////////////	

		enum IdlMeasurementType {
			REFLECTOMETRY,
			UNKNOWN_MEASUREMENTTYPE
		};
		typedef sequence <IdlMeasurementType> IdlMeasurementTypeSeq;


////////////////////////// AnalysisType ///////////////////////////

		enum IdlAnalysisType {
			DADARA,
			UNKNOWN_ANALYSISTYPE
		};


////////////////////////// ModelingType ///////////////////////////

		enum IdlModelingType {
			DADARA_MODELING,
			UNKNOWN_MODELINGTYPE
		};


/////////////////// Measurement /////////////////////

		valuetype IdlMeasurement : general::corba::IdlStorableObject {
			enum MeasurementStatus {
				MEASUREMENT_STATUS_SCHEDULED,
				MEASUREMENT_STATUS_ACQUIRING,
				MEASUREMENT_STATUS_ACQUIRED,
				MEASUREMENT_STATUS_ANALYZED,
				MEASUREMENT_STATUS_COMPLETED,
				MEASUREMENT_STATUS_ABORTED
			};

			public IdlMeasurementType type;
			public general::corba::IdlIdentifier monitoredElementId;

			public general::corba::WString128 name;

			public general::corba::IdlIdentifier setupId;
			public long long startTime;
			public long long duration;
			public MeasurementStatus status;
			public general::corba::WString64 localAddress;
			public general::corba::IdlIdentifier testId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in IdlMeasurementType type,
					in general::corba::IdlIdentifier monitoredElementId,
					in general::corba::WString128 name,
					in general::corba::IdlIdentifier setupId,
					in long long startTime,
					in long long duration,
					in MeasurementStatus status,
					in general::corba::WString64 localAddress,
					in general::corba::IdlIdentifier testId);
		};


//////////////////// Analysis ///////////////////////

		valuetype IdlAnalysis : general::corba::IdlStorableObject {
			public IdlAnalysisType type;
			public general::corba::IdlIdentifier monitoredElementId;
			public general::corba::IdlIdentifier measurementId;

			public general::corba::WString128 name;

			public general::corba::IdlIdentifier criteriaSetId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in IdlAnalysisType type,
					in general::corba::IdlIdentifier monitoredElementId,
					in general::corba::IdlIdentifier measurementId,
					in general::corba::WString128 name,
					in general::corba::IdlIdentifier criteriaSetId);
		};


/////////////////// Modeling /////////////////////

		valuetype IdlModeling : general::corba::IdlStorableObject {
			public IdlModelingType type;
			public general::corba::IdlIdentifier monitoredElementId;

			public general::corba::WString128 name;

			public general::corba::IdlIdentifier argumentSetId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in IdlModelingType type,
					in general::corba::IdlIdentifier monitoredElementId,
					in general::corba::WString128 name,
					in general::corba::IdlIdentifier argumentSetId);
		};


/////////////////// MeasurementSetup /////////////////////

		valuetype IdlMeasurementSetup : general::corba::IdlStorableObject {
			public general::corba::IdlIdentifier parameterSetId;
			public general::corba::IdlIdentifier criteriaSetId;
			public general::corba::IdlIdentifier thresholdSetId;
			public general::corba::IdlIdentifier etalonId;
			public general::corba::WString256 description;
			public long long measurementDuration;
			public general::corba::IdlIdentifierSeq monitoredElementIds;
			public IdlMeasurementTypeSeq measurementTypes;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier parameterSetId,
					in general::corba::IdlIdentifier criteriaSetId,
					in general::corba::IdlIdentifier thresholdSetId,
					in general::corba::IdlIdentifier etalonId,
					in general::corba::WString256 description,
					in long long measurementDuration,
					in general::corba::IdlIdentifierSeq monitoredElementIds,
					in IdlMeasurementTypeSeq measurementTypes);
		};


/////////////////// Parameter /////////////////////

		struct IdlParameter {
			general::corba::IdlIdentifier id;
			general::corba::IdlParameterType type;
			::CORBA::OctetSeq value;
		};
		typedef sequence<IdlParameter> IdlParameterSeq;


////////////////////// Result ///////////////////////

		valuetype IdlResult : general::corba::IdlStorableObject {
			enum ResultSort {
				RESULT_SORT_MEASUREMENT,
				RESULT_SORT_ANALYSIS,
				RESULT_SORT_MODELING
			};

			public general::corba::IdlIdentifier measurementId;
			public general::corba::IdlIdentifier analysisId;
			public general::corba::IdlIdentifier modelingId;
			public ResultSort sort;
			public IdlParameterSeq parameters;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier measurementId,
					in general::corba::IdlIdentifier analysisId,
					in general::corba::IdlIdentifier modelingId,
					in ResultSort sort,
					in IdlParameterSeq parameters);
		};


/////////////////// ParameterSet /////////////////////

		valuetype IdlParameterSet : general::corba::IdlStorableObject {
			enum ParameterSetSort {
				SET_SORT_MEASUREMENT_PARAMETERS,
				SET_SORT_ANALYSIS_CRITERIA,
				SET_SORT_EVALUATION_THRESHOLDS,
				SET_SORT_ETALON,
				SET_SORT_MODELING_PARAMETERS,
				SET_SORT_PREDICTION_PARAMETERS
			};

			public ParameterSetSort sort;
			public general::corba::WString256 description;
			public IdlParameterSeq parameters;
			public general::corba::IdlIdentifierSeq monitoredElementIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in ParameterSetSort sort,
					in general::corba::WString256 description,
					in IdlParameterSeq parameters,
					in general::corba::IdlIdentifierSeq monitoredElementIds);
		};


/////////////////////// Test ////////////////////////

		valuetype IdlTest : general::corba::IdlStorableObject {
			union IdlTestTimeStamps switch (enum TestTemporalType {
					TEST_TEMPORAL_TYPE_ONETIME,
					TEST_TEMPORAL_TYPE_PERIODICAL,
					TEST_TEMPORAL_TYPE_CONTINUOUS}) {
				case TEST_TEMPORAL_TYPE_ONETIME:
					long long startTime;
				case TEST_TEMPORAL_TYPE_PERIODICAL:
					struct PeriodicalTestTimeStamps {
						long long startTime;
						long long endTime;
						general::corba::IdlIdentifier temporalPatternId;
					} ptts;
				case TEST_TEMPORAL_TYPE_CONTINUOUS:
					struct ContinuousTestTimeStamps {
						long long startTime;
						long long endTime;
					} ctts;
			};

			enum TestStatus {
				TEST_STATUS_NEW,		//Сохранён в БД на сервере
				TEST_STATUS_SCHEDULED,	//Передан на МУИ и сохранён в БД
				TEST_STATUS_PROCESSING,	//Извлечён из очереди; первое измерение начинает выполняться
				TEST_STATUS_COMPLETED,	//Последнее измерение завершено
				TEST_STATUS_STOPPED,	//Остановлен по запросу
				TEST_STATUS_ABORTED		//Прерван
			};

			public IdlTestTimeStamps timeStamps;
			public IdlMeasurementType measurementType;
			public IdlAnalysisType analysisType;
			public general::corba::IdlIdentifier groupTestId;
			public TestStatus status;
			public general::corba::IdlIdentifier monitoredElementId;
			public general::corba::WString256 description;
			public long numberOfMeasurements;
			public general::corba::IdlIdentifierSeq measurementSetupIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in IdlTestTimeStamps timeStamps,
					in IdlMeasurementType measurementType,
					in IdlAnalysisType analysisType,
					in general::corba::IdlIdentifier groupTestId,
					in TestStatus status,
					in general::corba::IdlIdentifier monitoredElementId,
					in general::corba::WString256 description,
					in long numberOfMeasurements,
					in general::corba::IdlIdentifierSeq measurementSetupIds);
		};

		typedef sequence<IdlTest> IdlTestSeq;


/////////////////////// Temporal Pattern ////////////////////////

		valuetype IdlCronTemporalPattern : general::corba::IdlStorableObject {
			public general::corba::WString256 description;
			public general::corba::WString64Seq cronStrings;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::WString256 description,
					in general::corba::WString64Seq cronStrings);
		};

		valuetype IdlIntervalsTemporalPattern : general::corba::IdlStorableObject {
			struct IntervalTemporalPatternId {
				long long ms;
				general::corba::IdlIdentifier temporalPatternId;
			};
			typedef sequence<IntervalTemporalPatternId> IntervalTemporalPatternIdSeq;

			struct IntervalDuration {
				long long ms;
				long long duration;
			};
			typedef sequence<IntervalDuration> IntervalDurationSeq;

			public IntervalTemporalPatternIdSeq intervalsTemporalPatternId;
			public IntervalDurationSeq intervalsDuration;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in IntervalTemporalPatternIdSeq intervalsTemporalPatternId,
					in IntervalDurationSeq intervalsDuration);
		};


		valuetype IdlPeriodicalTemporalPattern : general::corba::IdlStorableObject {
			public long long period;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in long long period);
		};


/////////////////////// MeasurementPortType /////////////////////

		valuetype IdlMeasurementPortType : general::corba::IdlStorableObject {
			public general::corba::WString32 codename;
			public general::corba::WString256 description;
			public general::corba::WString128 name;
			public IdlMeasurementTypeSeq measurementTypes;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::WString32 codename,
					in general::corba::WString256 description,
					in general::corba::WString128 name,
					in IdlMeasurementTypeSeq measurementTypes);
		};


////////////////////////// MeasurementPort ///////////////////////////

		valuetype IdlMeasurementPort : general::corba::IdlStorableObject {
			public general::corba::IdlIdentifier _typeId;
			public general::corba::WString128 name;
			public general::corba::WString256 description;
			public general::corba::IdlIdentifier kisId;
			public general::corba::IdlIdentifier portId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier _typeId,
					in general::corba::WString128 name,
					in general::corba::WString256 description,
					in general::corba::IdlIdentifier kisId,
					in general::corba::IdlIdentifier portId);
		};


//////////////////////////////// KIS ////////////////////////////////

		valuetype IdlKIS : administration::corba::IdlDomainMember {
			public general::corba::WString128 name;
			public general::corba::WString256 description;
			public general::corba::WString64 hostname;
			public short tcpPort;
			public general::corba::IdlIdentifier equipmentId;
			public general::corba::IdlIdentifier mcmId;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier domainId,
					in general::corba::WString128 name,
					in general::corba::WString256 description,
					in general::corba::WString64 hostname,
					in short tcpPort,
					in general::corba::IdlIdentifier equipmentId,
					in general::corba::IdlIdentifier mcmId);
		};


///////////////////// Monitored Element ///////////////////

		valuetype IdlMonitoredElement : administration::corba::IdlDomainMember {
			enum MonitoredElementSort {
				MONITOREDELEMENT_SORT_LINK,
				MONITOREDELEMENT_SORT_TRANSMISSION_PATH,
				MONITOREDELEMENT_SORT_EQUIPMENT,
				MONITOREDELEMENT_SORT_PORT,
				MONITOREDELEMENT_SORT_CABLEPORT
			};

			public general::corba::WString128 name;
			public general::corba::IdlIdentifier measurementPortId;
			public MonitoredElementSort sort;
			public general::corba::WString64 localAddress;

			public general::corba::IdlIdentifierSeq monitoredDomainMemberIds;

			factory init(in general::corba::IdlIdentifier id,
					in long long created,
					in long long modified,
					in general::corba::IdlIdentifier creatorId,
					in general::corba::IdlIdentifier modifierId,
					in long long version,
					in general::corba::IdlIdentifier domainId,
					in general::corba::WString128 name,
					in general::corba::IdlIdentifier measurementPortId,
					in MonitoredElementSort sort,
					in general::corba::WString64 localAddress,
					in general::corba::IdlIdentifierSeq monitoredDomainMemberIds);
		};


	};
};

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
};
};
};
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

#endif // MEASUREMENT_IDL
