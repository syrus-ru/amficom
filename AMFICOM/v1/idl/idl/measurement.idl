/*-
 * $Id: measurement.idl,v 1.71 2005/07/10 13:49:37 bass Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef MEASUREMENT_IDL
#define	MEASUREMENT_IDL

#include "general.idl"

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
module com {
module syrus {
module AMFICOM {
#else // MY_COMPILER_IS_NOT_BRAINDEAD
#pragma prefix "AMFICOM.syrus.com"
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

module measurement {
	module corba {

////////////////////////// Type ///////////////////////////	

#ifdef NO_ALIASES
		valuetype IdlMeasurementType: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlMeasurementType: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::WString32 codename;
			public general::corba::WString256 description;

			public general::corba::IdentifierSeq inParameterTypeIds;
			public general::corba::IdentifierSeq outParameterTypeIds;
			public general::corba::IdentifierSeq measurementPortTypeIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::WString32 codename,
					in general::corba::WString256 description,
					in general::corba::IdentifierSeq inParameterTypeIds,
					in general::corba::IdentifierSeq outParameterTypeIds,
					in general::corba::IdentifierSeq measurementPortTypeIds);
		};

		typedef IdlMeasurementType MeasurementType;
		typedef sequence<MeasurementType> MeasurementTypeSeq;

#ifdef NO_ALIASES
		valuetype IdlAnalysisType: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlAnalysisType: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::WString32 codename;
			public general::corba::WString256 description;

			public general::corba::IdentifierSeq inParameterTypeIds;
			public general::corba::IdentifierSeq criteriaParameterTypeIds;
			public general::corba::IdentifierSeq etalonParameterTypeIds;
			public general::corba::IdentifierSeq outParameterTypeIds;

			public general::corba::IdentifierSeq measurementTypeIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::WString32 codename,
					in general::corba::WString256 description,
					in general::corba::IdentifierSeq inParameterTypeIds,
					in general::corba::IdentifierSeq criteriaParameterTypeIds,
					in general::corba::IdentifierSeq etalonParameterTypeIds,
					in general::corba::IdentifierSeq outParameterTypeIds,
					in general::corba::IdentifierSeq measurementTypeIds);
		};

		typedef IdlAnalysisType AnalysisType;
		typedef sequence<AnalysisType> AnalysisTypeSeq;

#ifdef NO_ALIASES
		valuetype IdlEvaluationType: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlEvaluationType: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::WString32 codename;
			public general::corba::WString256 description;

			public general::corba::IdentifierSeq inParameterTypeIds;
			public general::corba::IdentifierSeq thresholdParameterTypeIds;
			public general::corba::IdentifierSeq etalonParameterTypeIds;
			public general::corba::IdentifierSeq outParameterTypeIds;

			public general::corba::IdentifierSeq measurementTypeIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::WString32 codename,
					in general::corba::WString256 description,
					in general::corba::IdentifierSeq inParameterTypeIds,
					in general::corba::IdentifierSeq thresholdParameterTypeIds,
					in general::corba::IdentifierSeq etalonParameterTypeIds,
					in general::corba::IdentifierSeq outParameterTypeIds,
					in general::corba::IdentifierSeq measurementTypeIds);
		};

		typedef IdlEvaluationType EvaluationType;
		typedef sequence<EvaluationType> EvaluationTypeSeq;

#ifdef NO_ALIASES
		valuetype IdlModelingType: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlModelingType: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::WString32 codename;
			public general::corba::WString256 description;

			public general::corba::IdentifierSeq inParameterTypeIds;
			public general::corba::IdentifierSeq outParameterTypeIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::WString32 codename,
					in general::corba::WString256 description,
					in general::corba::IdentifierSeq inParameterTypeIds,
					in general::corba::IdentifierSeq outParameterTypeIds);
		};

		typedef IdlModelingType ModelingType;
		typedef sequence<ModelingType> ModelingTypeSeq;

/////////////////// Parameter and Set /////////////////////

		typedef struct IdlParameter {
			general::corba::Identifier id;
			general::corba::Identifier _typeId;
			::CORBA::OctetSeq value;
		} Parameter;

		typedef sequence<Parameter> ParameterSeq;

#ifdef NO_ALIASES
		valuetype IdlParameterSet: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlParameterSet: general::corba::StorableObject {
#endif // NO_ALIASES
			enum ParameterSetSort {
				SET_SORT_MEASUREMENT_PARAMETERS,
				SET_SORT_ANALYSIS_CRITERIA,
				SET_SORT_EVALUATION_THRESHOLDS,
				SET_SORT_ETALON,
				SET_SORT_MODELING_PARAMETERS,
				SET_SORT_PREDICTION_PARAMETERS
			};

			public ParameterSetSort sort;
			public general::corba::WString256 description;
			public ParameterSeq parameters;
			public general::corba::IdentifierSeq monitoredElementIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in ParameterSetSort sort,
					in general::corba::WString256 description,
					in ParameterSeq parameters,
					in general::corba::IdentifierSeq monitoredElementIds);
		};

		typedef IdlParameterSet ParameterSet;
		typedef sequence<ParameterSet> ParameterSetSeq;

/////////////////// Modeling /////////////////////

#ifdef NO_ALIASES
		valuetype IdlModeling: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlModeling: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::Identifier _typeId;
			public general::corba::Identifier monitoredElementId;

			public general::corba::WString128 name;

			public general::corba::Identifier argumentSetId;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier _typeId,
					in general::corba::Identifier monitoredElementId,
					in general::corba::WString128 name,
					in general::corba::Identifier argumentSetId);
		};

		typedef IdlModeling Modeling;
		typedef sequence<Modeling> ModelingSeq;

/////////////////// Measurement /////////////////////

#ifdef NO_ALIASES
		valuetype IdlMeasurementSetup: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlMeasurementSetup: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::Identifier parameterSetId;
			public general::corba::Identifier criteriaSetId;
			public general::corba::Identifier thresholdSetId;
			public general::corba::Identifier etalonId;
			public general::corba::WString256 description;
			public long long measurementDuration;
			public general::corba::IdentifierSeq monitoredElementIds;
			public general::corba::IdentifierSeq measurementTypeIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier parameterSetId,
					in general::corba::Identifier criteriaSetId,
					in general::corba::Identifier thresholdSetId,
					in general::corba::Identifier etalonId,
					in general::corba::WString256 description,
					in long long measurementDuration,
					in general::corba::IdentifierSeq monitoredElementIds,
					in general::corba::IdentifierSeq measurementTypeIds);
		};

		typedef IdlMeasurementSetup MeasurementSetup;
		typedef sequence<MeasurementSetup> MeasurementSetupSeq;

#ifdef NO_ALIASES
		valuetype IdlMeasurement: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlMeasurement: general::corba::StorableObject {
#endif // NO_ALIASES
			enum MeasurementStatus {
				MEASUREMENT_STATUS_SCHEDULED,
				MEASUREMENT_STATUS_ACQUIRING,
				MEASUREMENT_STATUS_ACQUIRED,
				MEASUREMENT_STATUS_ANALYZED_OR_EVALUATED,
				MEASUREMENT_STATUS_COMPLETED,
				MEASUREMENT_STATUS_ABORTED
			};

			public general::corba::Identifier _typeId;
			public general::corba::Identifier monitoredElementId;

			public general::corba::WString128 name;

			public general::corba::Identifier setupId;
			public long long startTime;
			public long long duration;
			public MeasurementStatus status;
			public general::corba::WString64 localAddress;
			public general::corba::Identifier testId;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier _typeId,
					in general::corba::Identifier monitoredElementId,
					in general::corba::WString128 name,
					in general::corba::Identifier setupId,
					in long long startTime,
					in long long duration,
					in MeasurementStatus status,
					in general::corba::WString64 localAddress,
					in general::corba::Identifier testId);
		};

		typedef IdlMeasurement Measurement;
		typedef sequence<Measurement> MeasurementSeq;

/////////////////////// Temporal Pattern ////////////////////////

#ifdef NO_ALIASES
		valuetype IdlCronTemporalPattern: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlCronTemporalPattern: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::WString256 description;
			public general::corba::WString64Seq cronStrings;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::WString256 description,
					in general::corba::WString64Seq cronStrings);
		};

		typedef IdlCronTemporalPattern CronTemporalPattern;
		typedef sequence<CronTemporalPattern> CronTemporalPatternSeq;

#ifdef NO_ALIASES
		valuetype IdlIntervalsTemporalPattern: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlIntervalsTemporalPattern: general::corba::StorableObject {
#endif // NO_ALIASES
			struct IntervalTemporalPatternId {
				long long ms;
				general::corba::Identifier temporalPatternId;
			};

			typedef sequence<IntervalTemporalPatternId> IntervalTemporalPatternIdSeq;

			struct IntervalDuration {
				long long ms;
				long long duration;
			};

			typedef sequence<IntervalDuration> IntervalDurationSeq;

			public IntervalTemporalPatternIdSeq intervalsTemporalPatternId;
			public IntervalDurationSeq intervalsDuration;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in IntervalTemporalPatternIdSeq intervalsTemporalPatternId,
					in IntervalDurationSeq intervalsDuration);
		};

		typedef IdlIntervalsTemporalPattern IntervalsTemporalPattern;
		typedef sequence<IntervalsTemporalPattern> IntervalsTemporalPatternSeq;

#ifdef NO_ALIASES
		valuetype IdlPeriodicalTemporalPattern: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlPeriodicalTemporalPattern: general::corba::StorableObject {
#endif // NO_ALIASES
			public long long period;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in long long period);
		};

		typedef IdlPeriodicalTemporalPattern PeriodicalTemporalPattern;
		typedef sequence<PeriodicalTemporalPattern> PeriodicalTemporalPatternSeq;

/////////////////////// Test ////////////////////////

#ifdef NO_ALIASES
		valuetype IdlTest: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlTest: general::corba::StorableObject {
#endif // NO_ALIASES
			union IdlTestTimeStamps switch (enum TestTemporalType {
					TEST_TEMPORAL_TYPE_ONETIME,
					TEST_TEMPORAL_TYPE_PERIODICAL,
					TEST_TEMPORAL_TYPE_CONTINUOUS}) {
				case TEST_TEMPORAL_TYPE_ONETIME:
					long long startTime;
				case TEST_TEMPORAL_TYPE_PERIODICAL:
					struct PeriodicalTestTimeStamps {
						long long startTime;
						long long endTime;
						general::corba::Identifier temporalPatternId;
					} ptts;
				case TEST_TEMPORAL_TYPE_CONTINUOUS:
					struct ContinuousTestTimeStamps {
						long long startTime;
						long long endTime;
					} ctts;
			};

			enum TestStatus {
				TEST_STATUS_NEW,	//óÏÈÒÁÎ£Î × âä ÎÁ ÓÅÒ×ÅÒÅ
				TEST_STATUS_SCHEDULED,	//ðÅÒÅÄÁÎ ÎÁ íõé É ÓÏÈÒÁÎ£Î × âä
//				TEST_STATUS_QUEUED,	//ðÏÓÔÁ×ÌÅÎ íõé × ÏÞÅÒÅÄØ
				TEST_STATUS_PROCESSING,	//éÚ×ÌÅÞ£Î ÉÚ ÏÞÅÒÅÄÉ; ÐÅÒ×ÏÅ ÉÚÍÅÒÅÎÉÅ ÎÁÞÉÎÁÅÔ ×ÙÐÏÌÎÑÔØÓÑ
				TEST_STATUS_COMPLETED,	//ðÏÓÌÅÄÎÅÅ ÉÚÍÅÒÅÎÉÅ ÚÁ×ÅÒÛÅÎÏ
				TEST_STATUS_ABORTED	//ðÒÅÒ×ÁÎ
			};

			enum TestReturnType {
				TEST_RETURN_TYPE_WHOLE,
				TEST_RETURN_TYPE_EVENTS,
				TEST_RETURN_TYPE_REFERENCE
			};

			public IdlTestTimeStamps timeStamps;
			public general::corba::Identifier measurementTypeId;
			public general::corba::Identifier analysisTypeId;
			public general::corba::Identifier evaluationTypeId;
			public general::corba::Identifier groupTestId;
			public TestStatus status;
			public general::corba::Identifier monitoredElementId;
			public TestReturnType returnType;
			public general::corba::WString256 description;
			public long numberOfMeasurements;
			public general::corba::IdentifierSeq measurementSetupIds;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in IdlTestTimeStamps timeStamps,
					in general::corba::Identifier measurementTypeId,
					in general::corba::Identifier analysisTypeId,
					in general::corba::Identifier evaluationTypeId,
					in general::corba::Identifier groupTestId,
					in TestStatus status,
					in general::corba::Identifier monitoredElementId,
					in TestReturnType returnType,
					in general::corba::WString256 description,
					in long numberOfMeasurements,
					in general::corba::IdentifierSeq measurementSetupIds);
		};

		typedef IdlTest Test;
		typedef sequence<Test> TestSeq;

//////////////////// Analysis ///////////////////////

#ifdef NO_ALIASES
		valuetype IdlAnalysis: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlAnalysis: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::Identifier _typeId;
			public general::corba::Identifier monitoredElementId;
			public general::corba::Identifier measurementId;

			public general::corba::WString128 name;

			public general::corba::Identifier criteriaSetId;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier _typeId,
					in general::corba::Identifier monitoredElementId,
					in general::corba::Identifier measurementId,
					in general::corba::WString128 name,
					in general::corba::Identifier criteriaSetId);
		};

		typedef IdlAnalysis Analysis;
		typedef sequence<Analysis> AnalysisSeq;

//////////////////// Evaluation /////////////////////

#ifdef NO_ALIASES
		valuetype IdlEvaluation: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlEvaluation: general::corba::StorableObject {
#endif // NO_ALIASES
			public general::corba::Identifier _typeId;
			public general::corba::Identifier monitoredElementId;
			public general::corba::Identifier measurementId;

			public general::corba::Identifier thresholdSetId;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier _typeId,
					in general::corba::Identifier monitoredElementId,
					in general::corba::Identifier measurementId,
					in general::corba::Identifier thresholdSetId);
		};

		typedef IdlEvaluation Evaluation;
		typedef sequence<Evaluation> EvaluationSeq;

////////////////////// Result ///////////////////////

#ifdef NO_ALIASES
		valuetype IdlResult: general::corba::IdlStorableObject {
#else // NO_ALIASES
		valuetype IdlResult: general::corba::StorableObject {
#endif // NO_ALIASES
			enum ResultSort {
				RESULT_SORT_MEASUREMENT,
				RESULT_SORT_ANALYSIS,
				RESULT_SORT_EVALUATION,
				RESULT_SORT_MODELING
			};

			public general::corba::Identifier measurementId;
			public general::corba::Identifier analysisId;
			public general::corba::Identifier evaluationId;
			public general::corba::Identifier modelingId;
			public ResultSort sort;
			public ParameterSeq parameters;

#ifndef NO_DEFAULT_FACTORIES
			factory defaultInit();
#endif // NO_DEFAULT_FACTORIES
			factory init(in general::corba::Identifier id,
					in long long created,
					in long long modified,
					in general::corba::Identifier creatorId,
					in general::corba::Identifier modifierId,
					in long long version,
					in general::corba::Identifier measurementId,
					in general::corba::Identifier analysisId,
					in general::corba::Identifier evaluationId,
					in general::corba::Identifier modelingId,
					in ResultSort sort,
					in ParameterSeq parameters);
		};

		typedef IdlResult Result;
		typedef sequence<Result> ResultSeq;
	};
};

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
};
};
};
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

#endif // MEASUREMENT_IDL
