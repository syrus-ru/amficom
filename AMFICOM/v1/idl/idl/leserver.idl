/*-
 * $Id: leserver.idl,v 1.9 2005/10/20 14:08:37 arseniy Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef LOGINSERVER_IDL
#define LOGINSERVER_IDL

#include "administration.idl"
#include "event.idl"

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
module com {
module syrus {
module AMFICOM {
#else // MY_COMPILER_IS_NOT_BRAINDEAD
#pragma prefix "AMFICOM.syrus.com"
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

module leserver {
module corba {

	interface LoginServer : general::corba::Verifiable {

		administration::corba::IdlDomainSeq transmitAvailableDomains()
			raises (general::corba::AMFICOMRemoteException);

		void login(in general::corba::WString32 login,
			in general::corba::WString32 password,
			in general::corba::IdlIdentifier domainId,
			in general::corba::WString64 userHostName,
			out security::corba::IdlSessionKey sessionKey,
			out general::corba::IdlIdentifier userId)
			raises (general::corba::AMFICOMRemoteException);

		void logout(in security::corba::IdlSessionKey sessionKeyT)
			raises (general::corba::AMFICOMRemoteException);

		void validateAccess(in security::corba::IdlSessionKey sessionKeyT,
			out general::corba::IdlIdentifier userId,
			out general::corba::IdlIdentifier domainId)
			raises (general::corba::AMFICOMRemoteException);

		void setPassword(in security::corba::IdlSessionKey sessionKeyT,
			in general::corba::IdlIdentifier userId,
			in general::corba::WString32 password)
			raises (general::corba::AMFICOMRemoteException);
		
	};


	interface EventServer : general::corba::Verifiable {
		exception IdlEventProcessingException {
			wstring message;
		};

		void eventGeneration(in event::corba::IdlEvent event)
			raises (general::corba::AMFICOMRemoteException);

		void receiveEvents(in eventv2::corba::IdlEventSeq events)
			raises (IdlEventProcessingException);
	};
};
};

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
};
};
};
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

#endif // LOGINSERVER_IDL
