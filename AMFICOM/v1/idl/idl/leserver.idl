/*-
 * $Id: leserver.idl,v 1.3 2005/07/28 14:04:12 arseniy Exp $
 *
 * Copyright ¿ 2004-2005 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef LOGINSERVER_IDL
#define LOGINSERVER_IDL

#include "administration.idl"
#include "event.idl"

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
module com {
module syrus {
module AMFICOM {
#else // MY_COMPILER_IS_NOT_BRAINDEAD
#pragma prefix "AMFICOM.syrus.com"
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

module leserver {
module corba {

	interface LoginServer : general::corba::Verifiable {

		security::corba::IdlSessionKey login(in general::corba::WString32 login,
			in general::corba::WString32 password,
			out general::corba::IdlIdentifier userId)
			raises (general::corba::AMFICOMRemoteException);

		void logout(in security::corba::IdlSessionKey sessionKeyT)
			raises (general::corba::AMFICOMRemoteException);

		administration::corba::IdlDomainSeq transmitAvailableDomains(in security::corba::IdlSessionKey sessionKeyT)
			raises (general::corba::AMFICOMRemoteException);

		void selectDomain(in security::corba::IdlSessionKey sessionKeyT, in general::corba::IdlIdentifier domainId)
			raises (general::corba::AMFICOMRemoteException);

		void validateAccess(in security::corba::IdlSessionKey sessionKeyT,
			out general::corba::IdlIdentifier userId,
			out general::corba::IdlIdentifier domainId)
			raises (general::corba::AMFICOMRemoteException);

		void setPassword(in security::corba::IdlSessionKey sessionKeyT,
			in general::corba::IdlIdentifier userId,
			in general::corba::WString32 password)
			raises (general::corba::AMFICOMRemoteException);
		
	};


	interface EventServer : general::corba::Verifiable {
		void eventGeneration(in event::corba::IdlEvent event)
			raises (general::corba::AMFICOMRemoteException);
	};

};
};

#ifndef MY_COMPILER_IS_NOT_BRAINDEAD
};
};
};
#endif // MY_COMPILER_IS_NOT_BRAINDEAD

#endif // LOGINSERVER_IDL
