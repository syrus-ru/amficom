/*
 * $Id: AMFICOM.idl,v 1.12 2004/12/23 11:13:01 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Dept. of Science & Technology.
 * Project: AMFICOM.
 */

#ifndef AMFICOM_IDL
#define AMFICOM_IDL

#include "admin.idl"
#include "client.idl"
#include "report.idl"

module com {
module syrus {
module AMFICOM {
module CORBA {
interface AMFICOM: general::corba::NameResolver {
	void registerAlarmReceiver(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in AMFICOMClient cli)
		raises (General::AMFICOMRemoteException);

	void unregisterAlarmReceiver(
			in Admin::AccessIdentity_Transferable accessIdentity)
		raises (General::AMFICOMRemoteException);

	void syncPing(out long long serverTimeMillis)
		raises (General::AMFICOMRemoteException);

/*
 * Session management
 */

	long Logon(
			in wstring username,
			in ::CORBA::OctetSeq password,
			in wstring category,
			out Admin::AccessIdentity_Transferable accessIdentity)
		raises (General::AMFICOMRemoteException);

	long Logoff(
			in Admin::AccessIdentity_Transferable accessIdentity)
		raises (General::AMFICOMRemoteException);

	long GetLoggedUserIds(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out ::CORBA::WStringSeq userids)
		raises (General::AMFICOMRemoteException);

	long ChangePassword(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::OctetSeq oldpassword,
			in ::CORBA::OctetSeq newpassword)
		raises (General::AMFICOMRemoteException);

/*
 * General functions
 */

	long GetUId(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring type,
			out wstring id)
		raises (General::AMFICOMRemoteException);

	long GetResourceDescriptors(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring type,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetResourceDescriptor(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring type,
			in wstring id,
			out Resource::ResourceDescriptor_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetResourceDescriptorsByIds(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring type,
			in ::CORBA::WStringSeq ids,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetDomainResourceDescriptors(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring type,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetImages(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq ids,
			out Resource::ImageResourceSeq_Transferable imgs)
		raises (General::AMFICOMRemoteException);

/**
 * Administration
 */

	long GetObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Resource::ImageResourceSeq_Transferable imageseq,
			out Admin::DomainSeq_Transferable domainseq,
			out Admin::OperatorCategorySeq_Transferable categoryseq,
			out Admin::OperatorGroupSeq_Transferable groupseq,
			out Admin::OperatorProfileSeq_Transferable profileseq,
			out Admin::CommandPermissionAttributesSeq_Transferable execseq,
			out Admin::UserSeq_Transferable userseq)
		raises (General::AMFICOMRemoteException);

	long GetStatedObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq catagory_ids,
			in ::CORBA::WStringSeq group_ids,
			in ::CORBA::WStringSeq profile_ids,
			out Admin::OperatorCategorySeq_Transferable categoryseq,
			out Admin::OperatorGroupSeq_Transferable groupseq,
			out Admin::OperatorProfileSeq_Transferable profileseq)
		raises (General::AMFICOMRemoteException);

	long GetUserDescriptors(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Resource::ImageResourceSeq_Transferable imageseq,
			out Admin::DomainSeq_Transferable domainseq,
			out Admin::UserSeq_Transferable userseq)
		raises (General::AMFICOMRemoteException);

	long GetExecDescriptors(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Admin::CommandPermissionAttributesSeq_Transferable execseq)
		raises (General::AMFICOMRemoteException);

	long SaveObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in Resource::ImageResourceSeq_Transferable imageseq,
			in Admin::DomainSeq_Transferable domainseq,
			in Admin::OperatorCategorySeq_Transferable categoryseq,
			in Admin::OperatorGroupSeq_Transferable groupseq,
			in Admin::OperatorProfileSeq_Transferable profileseq,
			in Admin::CommandPermissionAttributesSeq_Transferable execseq,
			in Admin::UserSeq_Transferable userseq)
		raises (General::AMFICOMRemoteException);

	long RemoveObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq domainseq,
			in ::CORBA::WStringSeq categoryseq,
			in ::CORBA::WStringSeq groupseq,
			in ::CORBA::WStringSeq profileseq,
			in ::CORBA::WStringSeq execseq,
			in ::CORBA::WStringSeq userseq)
		raises (General::AMFICOMRemoteException);

	long GetAdminObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Admin::ServerSeq_Transferable serverseq,
			out Admin::ClientSeq_Transferable clientseq,
			out Admin::AgentSeq_Transferable agentseq)
		raises (General::AMFICOMRemoteException);

	long GetStatedAdminObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq server_ids,
			in ::CORBA::WStringSeq client_ids,
			in ::CORBA::WStringSeq agent_ids,
			out Admin::ServerSeq_Transferable serverseq,
			out Admin::ClientSeq_Transferable clientseq,
			out Admin::AgentSeq_Transferable agentseq)
		raises (General::AMFICOMRemoteException);

	long SaveAdminObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in Admin::ServerSeq_Transferable serverseq,
			in Admin::ClientSeq_Transferable clientseq,
			in Admin::AgentSeq_Transferable agentseq)
		raises (General::AMFICOMRemoteException);

	long RemoveAdminObjects(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq serverseq,
			in ::CORBA::WStringSeq clientseq,
			in ::CORBA::WStringSeq agentseq)
		raises (General::AMFICOMRemoteException);

/**
 * Alarms
 */

	long GetMessages(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Alarm::MessageSeq_Transferable messageseq)
		raises (General::AMFICOMRemoteException);

	long SetUserAlarm(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring source_id,
			in wstring descriptor)
		raises (General::AMFICOMRemoteException);

	long GetAlarmIdsForMonitoredElement(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring me_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long LoadMaintenanceData(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Alarm::EventSourceTypeSeq_Transferable est,
			out Alarm::AlertingMessageSeq_Transferable am,
			out Alarm::AlertingMessageUserSeq_Transferable amu)
		raises (General::AMFICOMRemoteException);

	long SaveMaintenanceData(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in Alarm::AlertingMessageSeq_Transferable am,
			in Alarm::AlertingMessageUserSeq_Transferable amu)
		raises (General::AMFICOMRemoteException);

	long RemoveMaintenanceData(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring amu_id)
		raises (General::AMFICOMRemoteException);

/**
 * Survey Resource management
 */

	long GetTestIdsForMonitoredElement(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring me_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetAnalysisIdsForMonitoredElement(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring me_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetModelingIdsForSchemePath(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring scheme_path_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetEvaluationIdsForMonitoredElement(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring me_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetAlarmedTests(
			in Admin::AccessIdentity_Transferable accessIdentity,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long QueryResource(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring parameter_id,
			in wstring kis_id,
			in wstring parameter_type_id)
		raises (General::AMFICOMRemoteException);

/**
 * Results
 */

	long GetResultSetResultIds(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring result_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

	long GetResultSetResultMEIds(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in wstring result_id,
			in wstring me_id,
			out Resource::ResourceDescriptorSeq_Transferable desc)
		raises (General::AMFICOMRemoteException);

/**
 * Reports
 */

	wstring saveReportTemplates(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in Report::ReportTemplateSeq_Transferable rts)
		raises (General::AMFICOMRemoteException);

	void getStatedReportTemplates(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq ids,
			out Report::ReportTemplateSeq_Transferable reportTemplates)
		raises (General::AMFICOMRemoteException);

	void removeReportTemplates(
			in Admin::AccessIdentity_Transferable accessIdentity,
			in ::CORBA::WStringSeq reportTemplate_ids)
		raises (General::AMFICOMRemoteException);
};
};
};
};
};

#endif
