#ifndef _network_idl_
#define _network_idl_

#include "general.idl"

module com
{
module syrus
{
module AMFICOM
{
module CORBA
{

module Network
{
	struct Port_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring interface_id;
		wstring address_id;
		wstring local_id;
		wstring type_id;
		wstring equipment_id;
		wstring domain_id;
		long long modified;
	};
	typedef sequence <Port_Transferable> PortSeq_Transferable;

	struct CablePort_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring interface_id;
		wstring address_id;
		wstring local_id;
		wstring type_id;
		wstring equipment_id;
		wstring domain_id;
		long long modified;
	};
	typedef sequence <CablePort_Transferable> CablePortSeq_Transferable;

	struct Equipment_Transferable
	{
		wstring id;
		wstring name;
		wstring description;
		wstring type_id;

		wstring longitude;
		wstring latitude;

		wstring hw_serial;
		wstring sw_serial;
		wstring hw_version;
		wstring sw_version;
		wstring inventory_nr;
		wstring manufacturer;
		wstring manufacturer_code;
		wstring supplier;
		wstring supplier_code;

		wstring eq_class;

		wstring domain_id;
		long long modified;
	};
	typedef sequence <Equipment_Transferable> EquipmentSeq_Transferable;

	struct Link_Transferable
	{
		wstring id;
		wstring name;
		wstring type_id;
		wstring description;

		wstring inventory_nr;
		wstring manufacturer;
		wstring manufacturer_code;
		wstring supplier;
		wstring supplier_code;

		wstring domain_id;

		long long modified;
	};
	typedef sequence <Link_Transferable> LinkSeq_Transferable;

	struct CableLinkThread_Transferable
	{
		wstring id;
		wstring name;
		wstring color;
		wstring mark;
		wstring link_type_id;
	};
	typedef sequence <CableLinkThread_Transferable> CableLinkThreadSeq_Transferable;

	struct CableLink_Transferable
	{
		wstring id;
		wstring name;
		wstring type_id;
		wstring description;

		wstring inventory_nr;
		wstring manufacturer;
		wstring manufacturer_code;
		wstring supplier;
		wstring supplier_code;

		wstring image_id;

		wstring domain_id;

		long long modified;
	};
	typedef sequence <CableLink_Transferable> CableLinkSeq_Transferable;
};

module NetworkDirectory
{
	struct EquipmentType_Transferable
	{
		wstring id;
		wstring name;
		wstring codename;
		wstring description;
		wstring manufacturer;
		wstring eq_class;

		wstring image_id;
		long long modified;

		General::CharacteristicSeq_Transferable characteristics;
	};
	typedef sequence <EquipmentType_Transferable> EquipmentTypeSeq_Transferable;

	struct PortType_Transferable
	{
		wstring id;
		wstring name;
		wstring codename;
		wstring description;
		wstring year;
		wstring body;
		wstring standard;
		wstring interface_id;
		wstring p_class;
		long long modified;

		General::CharacteristicSeq_Transferable characteristics;
	};
	typedef sequence <PortType_Transferable> PortTypeSeq_Transferable;

	struct CablePortType_Transferable
	{
		wstring id;
		wstring name;
		wstring codename;
		wstring description;
		wstring year;
		wstring body;
		wstring standard;
		wstring interface_id;
		wstring p_class;
		long long modified;

		General::CharacteristicSeq_Transferable characteristics;
	};
	typedef sequence <CablePortType_Transferable> CablePortTypeSeq_Transferable;

	struct LinkType_Transferable
	{
		wstring id;
		wstring name;
		wstring codename;
		wstring description;
		wstring year;
		wstring standard;
		wstring link_class;
		wstring manufacturer;
		wstring manufacturer_code;

		wstring image_id;
		long long modified;

		General::CharacteristicSeq_Transferable characteristics;
	};
	typedef sequence <LinkType_Transferable> LinkTypeSeq_Transferable;

	struct CableTypeThread_Transferable
	{
		wstring id;
		wstring name;
		wstring color;
		wstring mark;
		wstring link_type_id;
	};
	typedef sequence <CableTypeThread_Transferable> CableTypeThreadSeq_Transferable;

	struct CableLinkType_Transferable
	{
		wstring id;
		wstring name;
		wstring codename;
		wstring link_class;
		wstring manufacturer;
		wstring manufacturer_code;

		wstring image_id;
		long long modified;

		CableTypeThreadSeq_Transferable cable_threads;

		General::CharacteristicSeq_Transferable characteristics;
	};
	typedef sequence <CableLinkType_Transferable> CableLinkTypeSeq_Transferable;
};
};
};
};
};

#endif
