/*
 * $Id: reflect.idl,v 1.1 2004/06/22 12:27:24 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

#ifndef REFLECT_IDL
#define REFLECT_IDL

#include <common.idl>

/**
 * @version $Revision: 1.1 $, $Date: 2004/06/22 12:27:24 $
 * @author $Author: bass $
 */
module CORBA {
	typedef sequence<string> StringSeq;
};

module com {
	module syrus {
		module AMFICOM {
			module corba {
				module portable {
					module reflect {
						module common {
							valuetype ObjectResource {
								private ::com::syrus::AMFICOM::corba::portable::common::Identifier id;
								::com::syrus::AMFICOM::corba::portable::common::Identifier getId();
							};

							typedef sequence<ObjectResource> ObjectResourceSeq;

							valuetype MutableObjectResource: ObjectResource {
							};

							typedef sequence<MutableObjectResource> MutableObjectResourceSeq;

							valuetype ImmutableObjectResource: ObjectResource {
								private string codename;
								private wstring name;
								string getCodename();
								wstring getName();
							};

							typedef sequence<ImmutableObjectResource> ImmutableObjectResourceSeq;

							valuetype AbstractEventSource: MutableObjectResource {
								/**
								 * @see ::com::syrus::AMFICOM::corba::portable::alarm::Message#eventSourceName
								 */
								private wstring<258> name;
								/**
								 * @see ::com::syrus::AMFICOM::corba::portable::alarm::Message#eventSourceName
								 */
								private wstring<1024> description;
							};

							typedef sequence<AbstractEventSource> AbstractEventSourceSeq;
						};

						valuetype AlertingType: ::com::syrus::AMFICOM::corba::portable::reflect::common::ImmutableObjectResource {
							const string<64> ID_EMAIL = "email";
							const string<64> ID_FAX = "fax";
							const string<64> ID_LOG = "log";
							const string<64> ID_PAGING = "paging";
							const string<64> ID_POPUP = "popup";
							const string<64> ID_SMS = "sms";
							const string<64> ID_VOICE = "voice";
						};

						typedef sequence<AlertingType> AlertingTypeSeq;

						interface AlarmTypeUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getCodename(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getDescription(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface AlarmUtilities {
							const string UUID_PREFIX = "alrm";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface AlertingMessageTextUtilities {
							const string UUID_PREFIX = "am";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string new(in wstring text, in string eventTypeId, in string messageTypeId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void delete(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getText(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void setText(in string id, in wstring text) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getEventTypeId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getMessageTypeId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void setMessageTypeId(in string id, in string messageTypeId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds1(in string eventTypeId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds2(in string eventTypeId, in string messageTypeId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface AlertingMessageUserLinkUtilities {
							const string UUID_PREFIX = "amu";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string new(in string alertingMessageId, in string alertingTypeId, in string sourceId, in string userId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void delete(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getAlertingMessageId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void setAlertingMessageId(in string id, in string alertingMessageId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getAlertingTypeId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void setAlertingTypeId(in string id, in string alertingTypeId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getSourceId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUserId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds1(in string alertingMessageId, in string sourceId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds2(in string alertingMessageId, in string sourceId, in string userId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds3(in string alertingMessageId, in string alertingTypeId, in string sourceId, in string userId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface AlertingTypeUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getCodename(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface AlertingUtilities {
							const string UUID_PREFIX = "alrt";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string new(in long long alerted, in string alertingMessageUserId, in string eventId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							void delete(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds(in string alertingMessageUserId) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface ClientUtilities {
							const string UUID_PREFIX = "client";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface DomainUtilities {
							const string UUID_PREFIX = "domain";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface EquipmentUtilities {
							const string UUID_PREFIX = "eq";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface EventSourceTypeUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getCodename(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getSourceTableName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface EventSourceUtilities {
							const string UUID_PREFIX = "esrc";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getObjectSourceName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getDescription(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getObjectSourceId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getTypeId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getMatchingIds(in string eventSourceType) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface EventTypeUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getCodename(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getSelectedEventTypes1(in string eventSource, in string alarmType) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							CORBA::StringSeq getSelectedEventTypes2(in string eventSourceType, in string alarmType) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getSelectedEventType1(in string eventSource, in string alarmType) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getSelectedEventType2(in string eventSourceType, in string alarmType) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface EventUtilities {
							const string UUID_PREFIX = "sysev";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface ISMMapContextUtilities {
							const string UUID_PREFIX = "ismap";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface MapContextUtilities {
							const string UUID_PREFIX = "map";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface MessageTypeUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getCodename(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getDescription(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface ResultUtilities {
							const string UUID_PREFIX = "result";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface ServerUtilities {
							const string UUID_PREFIX = "server";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface SourceEventTypeRuleUtilities {
							const string UUID_PREFIX = "setrul";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface SourceTypeEventTypeLinkUtilities {
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};

						interface UserUtilities {
							const string UUID_PREFIX = "user";
							CORBA::StringSeq getIds() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getUUID() raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getType(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getLogin(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							wstring getName(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getOperationalId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getOperatorId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getOrganizationId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
							string getSubscriberId(in string id) raises (::com::syrus::AMFICOM::corba::portable::common::DatabaseAccessException);
						};
					};
				};
			};
		};
	};
};

#endif
