/*
 * $Id: NetDirectorydbInterfaceRemove.sqlj,v 1.1.2.2 2004/08/24 15:43:44 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

package com.syrus.AMFICOM.server.object;

import com.syrus.AMFICOM.CORBA.Constants;
import java.sql.SQLException;

/**
 * @version $Revision: 1.1.2.2 $, $Date: 2004/08/24 15:43:44 $
 * @author $Author: bass $
 * @module server_v1
 */
final class NetDirectorydbInterfaceRemove {
	private NetDirectorydbInterfaceRemove() {
	}

	static void removeCharacteristicLinks(
			String charLinkTable,
			String charLinkField,
			String element_id)
	{
		int count;
		int len2;
		int j;

		try
		{
			String qry = "delete from AMFICOM." + charLinkTable +
						" where " + charLinkField + " = '" + element_id + "'";
			#sql {
				BEGIN
					execute immediate :qry;
				END;
			};

		}
		catch(SQLException exx)
		{
			System.out.println("could not remove type characteristic: " + exx.getMessage());
			exx.printStackTrace();
		}
	}

	static int removePortTypes(
			String[] porttype_ids)
	{
		int i;
		int j;
		int len;
		int count = 0;

		String id = "";
		len = porttype_ids.length;
		for (i = 0; i < len; i++)
		{
			removeCharacteristicLinks(
					"PORTTYPECHARACTERISTICLINKS",
					"PORT_TYPE_ID",
					porttype_ids[i]);
			try
			{
				#sql {
					delete from AMFICOM.PORTTYPES
						where ID = :(porttype_ids[i])
				};
				#sql { commit };
			}
			catch(Exception exx)
			{
				System.out.println("error removing port type '" + porttype_ids[i] + "': " + exx.getMessage());
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}

	static int removeCablePortTypes(
			String[] porttype_ids)
	{
		int i;
		int j;
		int len;
		int count = 0;

		String id = "";
		len = porttype_ids.length;
		for (i = 0; i < len; i++)
		{
			removeCharacteristicLinks(
					"CABLEPORTTYPECHARACTERISTICS",
					"CABLE_PORT_TYPE_ID",
					porttype_ids[i]);
			try
			{
				#sql {
					delete from AMFICOM.CABLEPORTTYPES
						where ID = :(porttype_ids[i])
				};
				#sql { commit };
			}
			catch(Exception exx)
			{
				System.out.println("error removing cable port type '" + porttype_ids[i] + "': " + exx.getMessage());
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}

	static int removeLinkTypes(
			String[] linktype_ids)
	{
		int i;
		int j;
		int len;
		int count = 0;

		String id = "";
		len = linktype_ids.length;
		for (i = 0; i < len; i++)
		{
			removeCharacteristicLinks(
					"LINKTYPECHARACTERISTICLINKS",
					"LINK_TYPE_ID",
					linktype_ids[i]);
			try
			{
				#sql {
					delete from AMFICOM.LINKTYPES
						where ID = :(linktype_ids[i])
				};
				#sql { commit };
			}
			catch(Exception exx)
			{
				System.out.println("error removing link type '" + linktype_ids[i] + "': " + exx.getMessage());
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}

	private static int removeCableTypeThreads(String cabletype_id)
	{
		try
		{
			#sql { delete from AMFICOM.CABLETYPETHREADS
					where CABLE_TYPE_ID = :cabletype_id };
			#sql { commit };
		}
		catch(Exception exx)
		{
			System.out.println("error removing threads for cable link type '" + cabletype_id + "': " + exx.getMessage());
			return Constants.ERROR_SAVING;
		}
		return Constants.ERROR_NO_ERROR;
	}

	static int removeCableLinkTypes(
			String[] linktype_ids)
	{
		int i;
		int j;
		int len;
		int count = 0;

		String id = "";
		len = linktype_ids.length;
		for (i = 0; i < len; i++)
		{
			removeCableTypeThreads(linktype_ids[i]);

			removeCharacteristicLinks(
					"CABLETYPECHARACTERISTICLINKS",
					"CABLE_TYPE_ID",
					linktype_ids[i]);
			try
			{
				#sql {
					delete from AMFICOM.LINKTYPES
						where ID = :(linktype_ids[i])
				};
				#sql { commit };
			}
			catch(Exception exx)
			{
				System.out.println("error removing cable link type '" + linktype_ids[i] + "': " + exx.getMessage());
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}

	static int removeEquipmentTypes(
			String[] equipmenttype_ids)
	{
		int i;
		int j;
		int len;
		int count = 0;

		String id = "";
		len = equipmenttype_ids.length;
		for (i = 0; i < len; i++)
		{
			removeCharacteristicLinks(
					"EQUIPMENTTYPECHARACTERISTICLIN",
					"EQUIPMENT_TYPE_ID",
					equipmenttype_ids[i]);
			try
			{
				#sql {
					delete from AMFICOM.EQUIPMENTTYPES
						where ID = :(equipmenttype_ids[i])
				};
				#sql { commit };
			}
			catch(SQLException ex)
			{
				System.out.println("error removing equipment type '" + equipmenttype_ids[i] + "': " + ex.getMessage());
				ex.printStackTrace();
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}
}
