/*
 * $Id: FilterTemplate.sqlj,v 1.1.2.4 2004/09/09 11:35:20 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

package com.syrus.AMFICOM.server.object;

import com.syrus.AMFICOM.CORBA.Resource.Filter_Transferable;
import com.syrus.util.database.JdbcBlobManager;
import java.sql.*;
import sqlj.runtime.ref.DefaultContext;

/**
 * @version $Revision: 1.1.2.4 $, $Date: 2004/09/09 11:35:20 $
 * @author $Author: bass $
 * @module server_v1
 */
final class FilterTemplate {
	private String id;
	private String resource_typ;
	private byte[] logic_scheme;

	FilterTemplate(final Connection conn, Filter_Transferable filter) throws SQLException {
		this.id = filter.id; 
		this.resource_typ = filter.resource_typ;
		this.logic_scheme = filter.logic_scheme;
		#sql [new DefaultContext(conn)] {
			INSERT INTO amficom.filters (id, resource_typ, logic_scheme) VALUES (:(this.id), :(this.resource_typ), EMPTY_BLOB())
		};
 		JdbcBlobManager.setData(conn, "logic_scheme", "amficom.filters", "id = '" + this.id + '\'', false, this.logic_scheme);
		conn.commit();
	}

	FilterTemplate(final Connection conn, String id) throws SQLException {
		DefaultContext connCtx = new DefaultContext(conn);

		Blob logicScheme;
		#sql [connCtx] { 
			SELECT resource_typ, logic_scheme INTO :(this.resource_typ), :logicScheme FROM amficom.filters WHERE id = :id
		};
		this.id = id;
		if (this.resource_typ == null)
			this.resource_typ = "";
		this.logic_scheme = ((logicScheme == null) ? (new byte[0]) : JdbcBlobManager.getData(logicScheme));
	}

	Filter_Transferable getTransferable() {
		return new Filter_Transferable(
			this.id,
			this.resource_typ,
			this.logic_scheme);
	}

	String getId() {
		return this.id;
	}
}
