/*
 * $Id: ISMdbInterfaceRemove.sqlj,v 1.1.2.4 2004/09/09 11:35:20 bass Exp $
 *
 * Copyright © 2004 Syrus Systems.
 * Научно-технический центр.
 * Проект: АМФИКОМ.
 */

package com.syrus.AMFICOM.server.object;

import com.syrus.AMFICOM.CORBA.Constants;
import com.syrus.AMFICOM.server.event.EventSource;
import java.sql.*;
import sqlj.runtime.ref.DefaultContext;

/**
 * @version $Revision: 1.1.2.4 $, $Date: 2004/09/09 11:35:20 $
 * @author $Author: bass $
 * @module server_v1
 */
final class ISMdbInterfaceRemove {
	private ISMdbInterfaceRemove() {
	}

	static int removeAccessPorts(final Connection conn, String[] accessport_ids) throws SQLException {
		DefaultContext connCtx = new DefaultContext(conn);

		int len = accessport_ids.length;
		for (int i = 0; i < len; i++)
		{
			try
			{
				#sql [connCtx] {
					delete from AMFICOM.ACCESSPORTCHARACTERISTICS
						where ACCESS_PORT_ID = :(accessport_ids[i])
				};
				#sql [connCtx] {
					delete from AMFICOM.ACCESSPORTS
						where ID = :(accessport_ids[i])
				};
				conn.commit();
			}
			catch(SQLException ex)
			{
				System.out.println("error saVing accessport: " + ex.getMessage());
				ex.printStackTrace();
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}

	static int removeKISs(final Connection conn, String rtuIds[]) throws SQLException {
		for(int i = 0; i < rtuIds.length; i++)
			(new EventSource(EventSource.getIdByObjectId(rtuIds[i]))).delete();
		return NetdbInterfaceRemove.removeEquipments(conn, rtuIds);
	}

	static int removeTransmissionPaths(final Connection conn, String[] path_ids) throws SQLException {
		DefaultContext connCtx = new DefaultContext(conn);

		String me_id;
		int len = path_ids.length;
		for (int i = 0; i < len; i++)
		{
			try
			{
				try
				{
					#sql [connCtx] {
						select ID into :me_id
						from AMFICOM.MONITOREDELEMENTS
						where PATH_ID = :(path_ids[i])
					};
					#sql [connCtx] {
						delete from AMFICOM.MONITOREDELEMENTATTACHMENTS
							where MONITORED_ELEMENT_ID = :me_id
					};
					#sql [connCtx] {
						delete from AMFICOM.MONITOREDELEMENTS
						where PATH_ID = :(path_ids[i])
					};
					conn.commit();
				}
				catch(SQLException e)
				{
					System.out.println("removing path - no ME");
				}
				#sql [connCtx] {
					delete from AMFICOM.TRANSMISSIONPATHCHARS
						where PATH_ID = :(path_ids[i])
				};
				#sql [connCtx] {
					delete from AMFICOM.PATHLINKS
						where PATH_ID = :(path_ids[i])
				};
				#sql [connCtx] {
					delete from AMFICOM.TRANSMISSIONPATHS
						where ID = :(path_ids[i])
				};
				conn.commit();
			}
			catch(SQLException ex)
			{
				System.out.println("error saVing path: " + ex.getMessage());
				ex.printStackTrace();
				return Constants.ERROR_SAVING;
			}
		}
		return Constants.ERROR_NO_ERROR;
	}
}
