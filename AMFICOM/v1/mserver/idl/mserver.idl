#ifndef _MSERVER_IDL_
#define _MSERVER_IDL_

#include <general.idl>
#include <administration.idl>
#include <measurement.idl>
#include <configuration.idl>

module com {
module syrus {
module AMFICOM {
module mserver {
module corba {

	interface MServer : general::corba::IdentifierGeneratorServer {

////////////////////////////////////////////	Receive ///////////////////////////////////////////////////
		void receiveResults(in measurement::corba::ResultSeq_Transferable results,
												in general::corba::Identifier_Transferable mcm_id)
			raises (general::corba::AMFICOMRemoteException);

///////////////////////////////////////////	General ////////////////////////////////////////////////////

		general::corba::ParameterType_Transferable transmitParameterType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		general::corba::CharacteristicType_Transferable transmitCharacteristicType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		general::corba::Characteristic_Transferable transmitCharacteristic(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

/////////////////////////////////////////	Administration ///////////////////////////////////////////////

		administration::corba::User_Transferable transmitUser(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		administration::corba::Domain_Transferable transmitDomain(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		administration::corba::Server_Transferable transmitServer(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		administration::corba::MCM_Transferable transmitMCM(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);


/*
		administration::corba::UserSeq_Transferable transmitUsers(
						in general::corba::IdentifierSeq_Transferable ids_Transferable,
						in general::corba::AccessIdentifier_Transferable accessIdentifier)
			raises (general::corba::AMFICOMRemoteException);

		administration::corba::UserSeq_Transferable transmitUsersButIdsCondition(
						in general::corba::IdentifierSeq_Transferable ids_Transferable,
						in general::corba::AccessIdentifier_Transferable accessIdentifier,
						in general::corba::StorableObjectCondition_Transferable condition_Transferable)
			raises (general::corba::AMFICOMRemoteException);
*/


/////////////////////////////////////////	Configuration ////////////////////////////////////////////////

		configuration::corba::EquipmentType_Transferable transmitEquipmentType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::TransmissionPathType_Transferable transmitTransmissionPathType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::LinkType_Transferable transmitLinkType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);							

		configuration::corba::PortType_Transferable transmitPortType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);							

		configuration::corba::MeasurementPortType_Transferable transmitMeasurementPortType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::Equipment_Transferable transmitEquipment(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::Link_Transferable transmitLink(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::Port_Transferable transmitPort(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::TransmissionPath_Transferable transmitTransmissionPath(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::KIS_Transferable transmitKIS(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::MeasurementPort_Transferable transmitMeasurementPort(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		configuration::corba::MonitoredElement_Transferable transmitMonitoredElement(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);





		configuration::corba::KISSeq_Transferable transmitKISsButIdsByCondition(
						in general::corba::IdentifierSeq_Transferable ids_Transferable,
						in general::corba::StorableObjectCondition_Transferable condition_Transferable)
			raises (general::corba::AMFICOMRemoteException);		


/////////////////////////////////////////	Measurement //////////////////////////////////////////////////

		measurement::corba::MeasurementType_Transferable transmitMeasurementType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::AnalysisType_Transferable transmitAnalysisType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::EvaluationType_Transferable transmitEvaluationType(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::Set_Transferable transmitSet(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::MeasurementSetup_Transferable transmitMeasurementSetup(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::Test_Transferable transmitTest(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);

		measurement::corba::TemporalPattern_Transferable transmitTemporalPattern(in general::corba::Identifier_Transferable id)
			raises (general::corba::AMFICOMRemoteException);


		void updateTestStatus(in general::corba::Identifier_Transferable test_id,
			in measurement::corba::TestStatus status,
			in general::corba::Identifier_Transferable mcm_id);

		void updateTestsStatus(in general::corba::IdentifierSeq_Transferable test_ids,
			in measurement::corba::TestStatus status,
			in general::corba::Identifier_Transferable mcm_id);


//////////////////////////////////////////////////////////////////////////////////////////////////////
		void ping(in long i)
			raises (general::corba::AMFICOMRemoteException);
	};

};
};
};
};
};

#endif
