#ifndef _CONFIGURATION_IDL_
#define _CONFIGURATION_IDL_

#include <general.idl>

module com {
module syrus {
module AMFICOM {
module configuration {
module corba {

////////////////////// Characteristic /////////////////////

	struct Characteristic_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		wstring value;
	};

	typedef sequence <Characteristic_Transferable> CharacteristicSeq_Transferable;

////////////////////////// Port ///////////////////////////

	struct Port_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable interface_id;
		
		CharacteristicSeq_Transferable characteristics;
	};

	typedef sequence <Port_Transferable> PortSeq_Transferable;

	struct CablePort_Transferable	{
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable interface_id;

		CharacteristicSeq_Transferable characteristics;
	};

	typedef sequence <CablePort_Transferable> CablePortSeq_Transferable;

	struct MonitoringPort_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;

		CharacteristicSeq_Transferable characteristics;
	};

	typedef sequence <MonitoringPort_Transferable> MonitoringPortSeq_Transferable;

	struct MeasurementPort_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable equipment_id;

		CharacteristicSeq_Transferable characteristics;
	};

	typedef sequence <MeasurementPort_Transferable> MeasurementPortSeq_Transferable;

///////////////////// Monitored Element ///////////////////
	enum MonitoredElementSort {
		MONITOREDELEMENT_SORT_LINK,
		MONITOREDELEMENT_SORT_PATH,
		MONITOREDELEMENT_SORT_EQUIPMENT,
		MONITOREDELEMENT_SORT_PORT,
		MONITOREDELEMENT_SORT_CABLEPORT
	};


	struct MonitoredElement_Transferable {
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable kis_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable element_id;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable monitoring_port_id;
		wstring local_address;
/*
		element_id:
			port_id;
			cable_port_id;
			equipment_id;
			link_id;
			path_id;*/
	};

///////////////////////// Equipment ///////////////////////

	struct Equipment_Transferable	{
		com::syrus::AMFICOM::general::corba::Identifier_Transferable id;
	  long long created;
	  long long modified;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable creator_id;
	  com::syrus::AMFICOM::general::corba::Identifier_Transferable modifier_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable domain_id;

		com::syrus::AMFICOM::general::corba::Identifier_Transferable type_id;
		wstring name;
		wstring description;
		wstring longitude;
		wstring latitude;
		wstring hw_serial;
		wstring sw_serial;
		wstring hw_version;
		wstring sw_version;
		wstring inventory_nr;
		wstring manufacturer;
		wstring manufacturer_code;
		wstring supplier;
		wstring supplier_code;
		wstring eq_class;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable image_id;
		boolean is_kis;
		com::syrus::AMFICOM::general::corba::Identifier_Transferable mcm_id;
		CharacteristicSeq_Transferable characteristics;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable port_ids;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable cable_port_ids;
		com::syrus::AMFICOM::general::corba::IdentifierSeq_Transferable special_port_ids;
	};

};
};
};
};
};

#endif

