############################################################
#
# $Id: amficomsrvrc,v 1.3 2006/04/26 07:39:10 arseniy Exp $
#
# vim:ft=sh:
#

if [ -z "${MAIN}" ]
then
	echo "Main class is not set (\`\`MAIN\'\' variable is empty)"
	exit 1
elif [ -z "${CLASSPATH}" ]
then
	echo "Class path is not set (\`\`CLASSPATH\'\' variable is empty)"
	exit 1
elif [ -z "${APPNAME}" ]
then
	echo "Application name is not set (\`\`APPNAME\'\' variable is empty)"
	exit 1
fi

uname="`uname -s`"
case "${uname}" in
	"Linux")
		grep="grep"
		sed="sed"
		;;
	"SunOS")
		grep="/usr/xpg4/bin/grep"
		sed="/usr/xpg4/bin/sed"
		;;
	*)
		echo "\"${uname}\": unsupported OS"
		exit 1
esac

if [ -z "${JAVA_HOME}" ]
then
	java="java"
else
	java="${JAVA_HOME}/bin/java"
fi

pidfile="`dirname $0`/${APPNAME}.pid"
logpath="logs"

function start() {
	if [ -e "${pidfile}" ]
	then
		pid=`cat ${pidfile}`
		psline=`ps -eo "pid,args" | ${grep} -E "^[ \t]*${pid}[ \t]"`
		if [ -z "${psline}" ]
		then
			echo "${APPNAME} is dead but subsys locked"
			return -1
		else
			args=`echo ${psline} | ${sed} "s/^\s*${pid}\s*//g"`
			echo "Args: ${args}"

			echo "${APPNAME} (pid ${pid}) is already running"
		fi
	else
		echo "Starting ${APPNAME}..."

		cd `dirname $0`
		mkdir -p "${logpath}"
		date=`date +%Y-%m-%d\ %H:%M:%S`
		echo "${date} ${APPNAME} started" >>${logpath}/${APPNAME}.stdout.log
		echo "${date} ${APPNAME} started" >>${logpath}/${APPNAME}.stderr.log
		${java} ${JAVAFLAGS} -classpath "${CLASSPATH}" ${MAIN} ${MAINOPTS} </dev/null >>${logpath}/${APPNAME}.stdout.log 2>>${logpath}/${APPNAME}.stderr.log &
		echo $! >${APPNAME}.pid
		cd -

		status
	fi
}

function stop() {
	if [ -e "${pidfile}" ]
	then
		pid=`cat ${pidfile}`
		psline=`ps -eo "pid,args" | ${grep} -E "^[ \t]*${pid}[ \t]"`
		echo "psline: ${psline}"
		if [ -z "${psline}" ]
		then
			echo "${APPNAME} is dead but subsys locked"
			return -1
		else
			args=`echo ${psline} | ${sed} "s/^\s*${pid}\s*//g"`
			echo "Args: ${args}"

			echo "Stopping ${APPNAME}..."
			kill -15 ${pid}
			sleep 10
			killprocess ${pid}
			rm "${pidfile}"

			cd `dirname $0`
			mkdir -p "${logpath}"
			date=`date +%Y-%m-%d\ %H:%M:%S`
			echo "${date} ${APPNAME} stopped" >>${logpath}/${APPNAME}.stdout.log
			echo "${date} ${APPNAME} stopped" >>${logpath}/${APPNAME}.stderr.log
			cd -

			status
		fi
	else
		echo "${APPNAME} is already stopped"
	fi
}

function killprocess() {
	pid=$1
	psline=`ps -eo "pid,args" | ${grep} -E "^[ \t]*${pid}[ \t]"`
	if [ ! -z "${psline}" ]
	then
		args=`echo ${psline} | ${sed} "s/^\s*${pid}\s*//g"`
		echo "Args: ${args}"

		kill -9 ${pid}
		sleep 10
		killprocess ${pid}
	fi
}

function status() {
	if [ -e "${pidfile}" ]
	then
		pid=`cat ${pidfile}`
		psline=`ps -eo "pid,args" | ${grep} -E "^[ \t]*${pid}[ \t]"`
		if [ -z "${psline}" ]
		then
			echo "${APPNAME} is dead but subsys locked"
			return -1
		else
			args=`echo ${psline} | ${sed} "s/^\s*${pid}\s*//g"`
			echo "Args: ${args}"

			echo "${APPNAME} (pid ${pid}) is running"
		fi
	else
		echo "${APPNAME} is stopped"
	fi
}

function usage() {
	echo "Usage: $0 (start|stop|restart|status)"
}

if [ $# -eq 1 ]
then
	case "$1" in
		start)
			start
			;;
		stop)
			stop
			;;
		restart)
			stop
			start
			;;
		status)
			status
			;;
		*)
			echo "\"$1\": unknown argument"
			usage
			exit 1
			;;
	esac
else
	usage
	exit 1
fi
