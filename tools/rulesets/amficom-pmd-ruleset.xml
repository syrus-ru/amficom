<?xml version="1.0"?>
<ruleset name="amficom-pmd-ruleset">
	<description>
	This ruleset for checking AMFICOM project with PMD
	</description>
	<rule ref="rulesets/naming.xml">
		<exclude rule ="ShortVariable"/>
		<exclude rule ="LongVariable"/>
		<exclude rule ="AbstractNamingRule"/>
	</rule>	
	<rule ref="rulesets/unusedcode.xml"/>	
	<rule ref="rulesets/imports.xml"/>	
	<rule ref="rulesets/basic.xml"/>
	<rule ref="rulesets/clone.xml"/>
	<rule ref="rulesets/codesize.xml"/>
	<rule ref="rulesets/coupling.xml"/>
	<rule ref="rulesets/design.xml"/>
	<rule ref="rulesets/favorites.xml"/>
	<rule ref="rulesets/junit.xml"/>
	<rule ref="rulesets/naming.xml"/>
	<rule ref="rulesets/newrules.xml"/>
	<rule ref="rulesets/scratchpad.xml"/>
	<rule ref="rulesets/strictexception.xml"/>	
	<rule ref="rulesets/strings.xml">
		<exclude rule="AvoidDuplicateLiterals"/>
	</rule>		
	<rule ref="rulesets/unusedcode.xml/UnusedLocalVariable"/>
	<rule ref="rulesets/dummystring.xml"/>

	<rule name="AvoidDuplicateLiterals"
        message="The same String literal appears {0} times in this file; the first occurrence is on line {1}"
        class="net.sourceforge.pmd.rules.AvoidDuplicateLiteralsRule">
	    <description>
	    Code containing duplicate String literals can usually be improved by declaring the String as a constant field.
	    </description>
            <priority>3</priority>
            <properties>
	    	<property name="threshold" value="2"/>
	    </properties>
	    <example>
<![CDATA[
public class Foo {
 private void bar() {
    buz("Howdy");
    buz("Howdy");
    buz("Howdy");
    buz("Howdy");
 }
 private void buz(String x) {}
}
]]>
	    </example>
	</rule>

	-->
</ruleset>
